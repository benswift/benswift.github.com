<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="https://benswift.me/feed.xml" rel="self" type="application/atom+xml" /><link href="https://benswift.me/" rel="alternate" type="text/html" /><updated>2020-05-01T10:25:58+10:00</updated><id>https://benswift.me/feed.xml</id><title type="html">benswift.me</title><subtitle>livecoder &amp; researcher homepage - code, creativity, culture</subtitle><author><name>Ben Swift</name></author><entry><title type="html">Two-way OSC communication between Extempore and Pd</title><link href="https://benswift.me/blog/2020/04/30/two-way-osc-communication-between-extempore-and-pd/" rel="alternate" type="text/html" title="Two-way OSC communication between Extempore and Pd" /><published>2020-04-30T00:00:00+10:00</published><updated>2020-04-30T00:00:00+10:00</updated><id>https://benswift.me/blog/2020/04/30/two-way-osc-communication-between-extempore-and-pd</id><content type="html" xml:base="https://benswift.me/blog/2020/04/30/two-way-osc-communication-between-extempore-and-pd/">&lt;p&gt;Because &lt;a href=&quot;https://github.com/digego/extempore&quot;&gt;Extempore&lt;/a&gt; and
&lt;a href=&quot;https://puredata.info&quot;&gt;Pd&lt;/a&gt; are both multimedia programming environments, they
both speak &lt;a href=&quot;https://en.wikipedia.org/wiki/Open_Sound_Control&quot;&gt;OSC&lt;/a&gt; straight out
of the box. If you need to send messages (numbers, strings, other data) from one
program to the other over the local network&lt;sup id=&quot;fnref:lan&quot;&gt;&lt;a href=&quot;#fn:lan&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; then OSC is a pretty good way
to do it.&lt;/p&gt;

&lt;h2 id=&quot;pd-extempore&quot;&gt;Pd-&amp;gt;Extempore&lt;/h2&gt;

&lt;p&gt;To send OSC messages from Pd to Extempore, you‚Äôll first need to start Extempore,
define a function to act as the OSC callback/handler, and start the OSC server
listening on a particular port.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-xtlang&quot;&gt;;; the name of this function doesn't matter, as long as you specify the same
;; name later when you start the server
(define (osc-receive-handler timestamp address . args)
  (println 'osc-receive-handler address '-&amp;gt; args))

;; start the server listening on port 7009
(io:osc:start-server 7009 &quot;osc-receive-handler&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once you evaluate those lines you‚Äôll see a notification printed in the Extempore
terminal:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Starting OSC server on port: 7009 calling back to osc-receive-handler
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now that Extempore‚Äôs listening, you need to send a message with Pd. There‚Äôs a
built-in &lt;code&gt;oscformat&lt;/code&gt; object for this. As usual in Pd, the easiest way to see how
it works is to create an &lt;code&gt;oscformat&lt;/code&gt; object, then right-click to open up the
&lt;code&gt;oscformat-help.pd&lt;/code&gt; patch.&lt;/p&gt;

&lt;p&gt;Assuming you‚Äôre running Pd on the same computer as the Extempore OSC server you
set up before, you can send your messages to &lt;code&gt;localhost&lt;/code&gt; (look for the &lt;code&gt;connect
localhost 5000&lt;/code&gt; message in the Pd help patch). However, you need to make sure
the ports match‚Äîthe Extempore server is listening on port &lt;code&gt;7099&lt;/code&gt;, while the
default port number in the &lt;code&gt;oscformat-help.pd&lt;/code&gt; patch is &lt;code&gt;5000&lt;/code&gt; (so you‚Äôll need
to change it before you send that &lt;code&gt;connect message&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Once you‚Äôve done all that, you should be able to trigger the send messages (e.g.
&lt;code&gt;1 2 3&lt;/code&gt;) near the top of the patch. They‚Äôll be received by Extempore and passed
as arguments to the &lt;code&gt;osc-receive-handler&lt;/code&gt; function, which (as defined above)
just prints them to the log, so you‚Äôll see output like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;osc-receive-handler &quot;/cat/horse/pig&quot; -&amp;gt; (1.000000 2.000000 3.000000)
osc-receive-handler &quot;/cat/horse/pig&quot; -&amp;gt; (4.000000 5.000000 &quot;weasel&quot; 6.000000 7.000000 &quot;rat&quot;)
osc-receive-handler &quot;/mouse/banana&quot; -&amp;gt; (1.000000 2.000000 3.000000)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Success! üôåüéâüôå Now, re-define your &lt;code&gt;osc-receive-handler&lt;/code&gt; to do something more
interesting and you‚Äôre away.&lt;/p&gt;

&lt;h2 id=&quot;extempore-pd&quot;&gt;Extempore-&amp;gt;Pd&lt;/h2&gt;

&lt;p&gt;Sending OSC messages the opposite direction is pretty similar. In this case,
it‚Äôs Pd‚Äôs &lt;code&gt;oscparse&lt;/code&gt; object that you‚Äôll need. Again, go ahead an open up the
&lt;code&gt;oscparse-help.pd&lt;/code&gt; patch. Find the ‚Äúpackets from network‚Äù part of the patch
(again, make note of the port the server is listening on) and send the &lt;code&gt;listen&lt;/code&gt;
message to start Pd listening for incoming OSC messages.&lt;/p&gt;

&lt;p&gt;Then, start Extempore and start a listener again as before. You might not &lt;em&gt;use&lt;/em&gt;
this part if you‚Äôre just sending data out of Extempore, but it‚Äôs required to set
up some of the internal OSC infrastructure so you need to do it anyway.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-xtlang&quot;&gt;;; the name of this function doesn't matter, as long as you specify the same
;; name later when you start the server
(define (osc-receive-handler timestamp address . args)
  (println 'osc-receive-handler address '-&amp;gt; args))

;; start the server listening on port 7009
(io:osc:start-server 7009 &quot;osc-receive-handler&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then, it‚Äôs a one-liner to send an OSC message to a particular host &amp;amp; port:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-xtlang&quot;&gt;(io:osc:send (now) (cons &quot;localhost&quot; 7010) &quot;/test/msg&quot; &quot;Hello&quot; 500 6.6 &quot;World&quot; (random 10))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After the address argument (in this case &lt;code&gt;&quot;/test/msg&quot;&lt;/code&gt;) you can supply as many
arguments as you like‚Äîyou just need to make sure you unpack them properly on
the Pd side.&lt;/p&gt;

&lt;p&gt;This time, if the messages gets through ok you‚Äôll see the message received in
your Pd log view, with stuff like:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;parse-output: list test msg Hello 500 6.6 World 8
parse-output: list test msg Hello 500 6.6 World 0
parse-output: list test msg Hello 500 6.6 World 9
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;‚Ä¶plus a bunch more debugging output from the &lt;code&gt;oscparse-help.pd&lt;/code&gt; patch.&lt;/p&gt;

&lt;p&gt;As in the Pd-&amp;gt;Extempore case, you‚Äôre sending the message to localhost, so if
Extempore and Pd are running on the same machine then you‚Äôll be golden. If
you‚Äôre on a LAN, you‚Äôd need to specify the host &amp;amp; port with something like
&lt;code&gt;(cons &quot;192.168.11.15&quot; 7011)&lt;/code&gt; or whatever.&lt;/p&gt;

&lt;p&gt;The one other thing to note about the &lt;code&gt;io:osc:send&lt;/code&gt; function is that the first
argument is a &lt;em&gt;time&lt;/em&gt; argument. If you wanted to, e.g. send a message with a
2-second delay after evaluating that line, you could do something like:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-xtlang&quot;&gt;(io:osc:send (+ (now) (* *second* 2)) (cons &quot;localhost&quot; 7010) &quot;/test/msg&quot; &quot;Hello&quot; 500 6.6 &quot;World&quot; (random 10))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For a deeper dive on how time is handled in Extempore, see the &lt;a href=&quot;https://extemporelang.github.io/docs/overview/time/&quot;&gt;Extempore
docs&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Happy OSCing üòä&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:lan&quot;&gt;

      &lt;p&gt;even if you‚Äôre on a WAN, there are ways to do it‚Äîbut you might have to
deal with some packet loss and
&lt;a href=&quot;https://en.wikipedia.org/wiki/Network_address_translation&quot;&gt;NAT&lt;/a&gt; issues¬†&lt;a href=&quot;#fnref:lan&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Ben Swift</name></author><category term="extempore" /><category term="lens" /><summary type="html">Because Extempore and Pd are both multimedia programming environments, they both speak OSC straight out of the box. If you need to send messages (numbers, strings, other data) from one program to the other over the local network[^lan] then OSC is a pretty good way to do it.</summary></entry><entry><title type="html">A call-up to fight covid19</title><link href="https://benswift.me/blog/2020/04/18/a-call-up-to-fight-covid19/" rel="alternate" type="text/html" title="A call-up to fight covid19" /><published>2020-04-18T00:00:00+10:00</published><updated>2020-04-18T00:00:00+10:00</updated><id>https://benswift.me/blog/2020/04/18/a-call-up-to-fight-covid19</id><content type="html" xml:base="https://benswift.me/blog/2020/04/18/a-call-up-to-fight-covid19/">&lt;p&gt;As with many folks at the moment (both in Canberra and around the world) I‚Äôve
been called up into a covid19 taskforce (an initiative of the ANU‚Äôs Software
Innovation Institute, in partnership with the &lt;a href=&quot;https://cs.anu.edu.au&quot;&gt;RSCS&lt;/a&gt; &amp;amp;
other parts of the ANU). I‚Äôm the technical lead on the part of the project which
is trying to wrap up epidemiological simulation models into usable &amp;amp; robust
tools for seeing &amp;amp; understanding what the results of said models mean for the
Canberra health system. How can we predict what will happen, and how can we
manage our finite resources to deliver the best care possible‚Äîthese are the
questions we need to answer as the world settles in for (perhaps) a long period
of on-and-off distancing &amp;amp; isolation. I‚Äôll be able to share more details in the
future, so if you‚Äôre interested in that sort of thing then come back to check
for updates on this blog (I‚Äôll use the &lt;code&gt;covid19&lt;/code&gt; tag).&lt;/p&gt;

&lt;p&gt;That means that some aspects of my creative coding work are &lt;em&gt;temporarily&lt;/em&gt; on the
back burner (although I‚Äôm still teaching the &lt;a href=&quot;/blog/tag/lens/&quot;&gt;Laptop Ensemble&lt;/a&gt;). I can‚Äôt complain too much‚Äîcovid19 has put lots of stuff
on the back burner all over the world. In fact, I‚Äôm thankful to (a) have a job
and (b) have a sense of agency about all this stuff; the feeling of impotence as
an individual in a big world beset by this pandemic can be hard to take
sometimes.&lt;/p&gt;

&lt;p&gt;The toolkit of computation as explored through the domain of making art &amp;amp; music
is no less relevant when we‚Äôre all stuck at home in isolation. The arts can be a
balm in difficult times, especially while many are staring down the barrel of
unemployment &amp;amp; the need to re-skill. Our computers threaten to eat us and our
happiness if we just sit at them passively consuming our social media &amp;amp; news
feeds.&lt;/p&gt;

&lt;p&gt;The c/c/c studio will still (fingers crossed) kick off formally in 2021 as
anticipated, so stay tuned for more updates. And if you‚Äôre a schoolteacher in
the Canberra region and you‚Äôd like to have a guest talk (or even an interactive
workshop) on musical livecoding delivered via zoom over the next few months,
&lt;a href=&quot;mailto:ben.swift@anu.edu.au&quot;&gt;get in touch&lt;/a&gt;.&lt;/p&gt;</content><author><name>Ben Swift</name></author><category term="research" /><category term="covid19" /><summary type="html">As with many folks at the moment (both in Canberra and around the world) I‚Äôve been called up into a covid19 taskforce (an initiative of the ANU‚Äôs Software Innovation Institute, in partnership with the RSCS &amp;amp; other parts of the ANU). I‚Äôm the technical lead on the part of the project which is trying to wrap up epidemiological simulation models into usable &amp;amp; robust tools for seeing &amp;amp; understanding what the results of said models mean for the Canberra health system. How can we predict what will happen, and how can we manage our finite resources to deliver the best care possible‚Äîthese are the questions we need to answer as the world settles in for (perhaps) a long period of on-and-off distancing &amp;amp; isolation. I‚Äôll be able to share more details in the future, so if you‚Äôre interested in that sort of thing then come back to check for updates on this blog (I‚Äôll use the covid19 tag).</summary></entry><entry><title type="html">LENS Online - the Laptop Ensemble in a time of covid19</title><link href="https://benswift.me/blog/2020/03/21/lens-online-the-laptop-ensemble-in-a-time-of-covid19/" rel="alternate" type="text/html" title="LENS Online - the Laptop Ensemble in a time of covid19" /><published>2020-03-21T00:00:00+11:00</published><updated>2020-03-21T00:00:00+11:00</updated><id>https://benswift.me/blog/2020/03/21/lens-online-the-laptop-ensemble-in-a-time-of-covid19</id><content type="html" xml:base="https://benswift.me/blog/2020/03/21/lens-online-the-laptop-ensemble-in-a-time-of-covid19/">&lt;p&gt;Well, as with all ANU courses, we‚Äôre taking the &lt;a href=&quot;https://cs.anu.edu.au/courses/comp2710-lens/&quot;&gt;Laptop
Ensemble&lt;/a&gt;
(&lt;a href=&quot;https://cs.anu.edu.au/courses/comp2710-lens/resources/faq/#whats-the-deal-with-the-dual-course-codes-comp2710-and-musi2205&quot;&gt;COMP2710/MUSI2205&lt;/a&gt;)
course online.&lt;/p&gt;

&lt;p&gt;In some ways this will be easy (after all, it has &lt;em&gt;Laptop&lt;/em&gt; in the course title),
while in other ways this will be quite challenging (after all, it has &lt;em&gt;Ensemble&lt;/em&gt;
in the course title). The biggest thing is that the Ensemble is a relatively small (by CS
course size standards) and engaged bunch of students, and so we can push some of
the ‚Äúwhat will this course look like if we can‚Äôt meet physically for the entire
rest of the semester‚Äù question on to them&lt;sup id=&quot;fnref:lazy-pedagogy&quot;&gt;&lt;a href=&quot;#fn:lazy-pedagogy&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;If you‚Äôre not familiar with the Laptop Ensemble course, we use a flipped
lecture + weekly in-person crit/jam session model. Each week the students watch
some videos, listen to some music, read some things, look at some example code,
and make a 60 second video (with sound, obviously) exploring the week‚Äôs
‚Äúcreative provocation‚Äù. Then we get together, watch &amp;amp; discuss everyone‚Äôs video
submissions (the crit part) and then get together in small ensembles (three
musicians, different groups each week) to jam &amp;amp; finish the workshop with a
3-minute-long ensemble performances from each group. It‚Äôs super fun, we make
noise every week, and the results so far (it‚Äôs the end of week 4) have been
really great.&lt;/p&gt;

&lt;p&gt;Now that &lt;a href=&quot;https://www.anu.edu.au/news/all-news/covid-19-staff-update-‚Äì-18-march-2020&quot;&gt;we‚Äôre going
online&lt;/a&gt;,
the flipped part won‚Äôt change, but we won‚Äôt get our weekly workshop session. So,
here‚Äôs the current plan:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;students will still submit weekly videos, but alternating between individual
submissions and group submissions&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;we‚Äôll get together (synchronously) over zoom and watch the videos &amp;amp; have the crit&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;next week‚Äôs provocation: which models of collaboration work (and which don‚Äôt)
in a computer music ensemble?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;the final performance (the capstone of the course, usually held in a cool
nightclub) will &lt;em&gt;probably&lt;/em&gt; be an online streaming gig&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Stay tuned‚Äîstill lots to figure out, but I‚Äôm kindof excited. LENS will survive
while the world collapses around us (seriously, though, be nice to each other,
don‚Äôt hoard stuff and try and #flattenthecurve).&lt;/p&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:lazy-pedagogy&quot;&gt;

      &lt;p&gt;the best educators, like the &lt;a href=&quot;http://threevirtues.com&quot;&gt;best programmers&lt;/a&gt;,
are &lt;a href=&quot;https://blog.optimus-education.com/why-lazy-teachers-are-best&quot;&gt;lazy&lt;/a&gt;¬†&lt;a href=&quot;#fnref:lazy-pedagogy&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Ben Swift</name></author><category term="lens" /><category term="teaching" /><summary type="html">Well, as with all ANU courses, we‚Äôre taking the Laptop Ensemble (COMP2710/MUSI2205) course online.</summary></entry><entry><title type="html">Reimagine Fellowship UK trip report</title><link href="https://benswift.me/blog/2020/03/11/reimagine-fellowship-uk-trip-report/" rel="alternate" type="text/html" title="Reimagine Fellowship UK trip report" /><published>2020-03-11T00:00:00+11:00</published><updated>2020-03-11T00:00:00+11:00</updated><id>https://benswift.me/blog/2020/03/11/reimagine-fellowship-uk-trip-report</id><content type="html" xml:base="https://benswift.me/blog/2020/03/11/reimagine-fellowship-uk-trip-report/">&lt;p&gt;I was lucky enough to be able to spend most of February in the UK on a research
visit as part of my &lt;a href=&quot;/blog/2019/08/30/Im-a-reimagine-fellow/&quot;&gt;Reimagine Fellowship&lt;/a&gt;‚Äîdesigning &amp;amp; delivering a
‚Äúcreative‚Äù coding extension course for ACT students in year 11 &amp;amp; 12.&lt;/p&gt;

&lt;p&gt;It was a great trip, and has answered some of the questions that I had ahead of
time, and more importantly has helped me pose better questions in the future. A
few trip highlights:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;the International Conference on Live Coding (ICLC ‚Äò20) was super-fun,
&lt;a href=&quot;/livecoding/2020-02-07-iclc-20.html&quot;&gt;performing at the conference Algorave&lt;/a&gt; was a nice chance to show off some of
the more recent work in &lt;a href=&quot;https://github.com/digego/extempore&quot;&gt;Extempore&lt;/a&gt;,
being invited to run an &lt;a href=&quot;https://iclc.toplap.org/2020/schedule.html&quot;&gt;Extempore
workshop&lt;/a&gt; was an important chance
to road test some of the ‚Äúcreative coding teaching materials‚Äù I‚Äôll be rolling
out next year through the &lt;a href=&quot;/blog/2019/03/20/reimagine-fellow-project-pitch/&quot;&gt;c/c/c studio creative code outreach program&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;hanging out with &lt;a href=&quot;https://twitter.com/samaaron&quot;&gt;Sam Aaron&lt;/a&gt; (of &lt;a href=&quot;http://sonic-pi.net&quot;&gt;Sonic
Pi&lt;/a&gt; fame) to discuss ways to use creative coding as a
diverse &amp;amp; inclusive pathway into computing, the architecture of livecoding
languages/environments, and again &lt;a href=&quot;https://www.twitch.tv/videos/551005336&quot;&gt;making some
music&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;meeting with &lt;a href=&quot;https://www.microsoft.com/en-us/research/people/simonpj/&quot;&gt;Simon Peyton
Jones&lt;/a&gt; at &lt;a href=&quot;https://www.microsoft.com/en-us/research/lab/microsoft-research-cambridge/&quot;&gt;MSR
Cambridge&lt;/a&gt;
to see how the grassroots &lt;a href=&quot;https://www.computingatschool.org.uk&quot;&gt;Computing at
School&lt;/a&gt; (CAS) organisation (of which
he‚Äôs the chair) works to encourage, support and equip teachers of computing
through a Community of Professional Practice, and to think about how we could
provide similar support to teachers in the ACT (and Australia), especially in
the context of providing creative code classroom resources &amp;amp; professional
development opportunities&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Visiting Quintin Cutts and the &lt;a href=&quot;https://www.gla.ac.uk/schools/computing/research/researchsections/cseducation/&quot;&gt;Centre for Computing Science
Education&lt;/a&gt;
at Glasgow University to &lt;a href=&quot;/talks/designing-the-ccc-studio/&quot;&gt;present&lt;/a&gt; &amp;amp; workshop ideas for the c/c/c studio outreach course, think strategically
about building up our (ANU RSCS‚Äôs) capability in CS education research and
partnering with them on improving the learning experience for all our existing
students, and also attracting new and diverse students who might not consider
studying CS at uni&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;climbing &lt;a href=&quot;https://en.wikipedia.org/wiki/Dumgoyne&quot;&gt;Dumgoyne&lt;/a&gt; in a whiteout,
emerging at the top just as the sun broke through the clouds to reveal a
glorious view of the countryside, then falling on my arse on the way down and
having to put my trousers in the dryer the night before flying out (as shown
in the picture)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/dumgoyne-arse-post-climb.jpg&quot; alt=&quot;my arse after slipping over on dumgoyne&quot; /&gt;&lt;/p&gt;

&lt;p&gt;All of these folks will be important collaborators going forward as we put the
creative code curriculum together (next deadline: documents for the &lt;a href=&quot;http://www.bsss.act.edu.au&quot;&gt;ACT
BSSS&lt;/a&gt; for accreditaion, due at the end of March). In
addition, I‚Äôm speaking next week at the National Future Schools festival (with
&lt;a href=&quot;https://aca.edu.au/about/&quot;&gt;Bruce Fuda&lt;/a&gt;) on &lt;a href=&quot;https://www.terrapinn.com/exhibition/national-future-schools/speaker-ben-SWIFT.stm&quot;&gt;Teaching Code with Music and
Teaching Music with
Code&lt;/a&gt;,
so if you‚Äôre in attendance you should come along and say hi.&lt;/p&gt;</content><author><name>Ben Swift</name></author><category term="reimagine" /><summary type="html">I was lucky enough to be able to spend most of February in the UK on a research visit as part of my Reimagine Fellowship‚Äîdesigning &amp;amp; delivering a ‚Äúcreative‚Äù coding extension course for ACT students in year 11 &amp;amp; 12.</summary></entry><entry><title type="html">Command/Control: giving OS aware keybinding hints</title><link href="https://benswift.me/blog/2020/02/14/command-control-giving-os-aware-keybinding-hints/" rel="alternate" type="text/html" title="Command/Control: giving OS aware keybinding hints" /><published>2020-02-14T00:00:00+11:00</published><updated>2020-02-14T00:00:00+11:00</updated><id>https://benswift.me/blog/2020/02/14/command-control-giving-os-aware-keybinding-hints</id><content type="html" xml:base="https://benswift.me/blog/2020/02/14/command-control-giving-os-aware-keybinding-hints/">&lt;p&gt;As someone who writes a lot of &lt;a href=&quot;https://extemporelang.github.io&quot;&gt;web-based&lt;/a&gt;
&lt;a href=&quot;https://cs.anu.edu.au/courses/comp1720/&quot;&gt;documentation for&lt;/a&gt;
&lt;a href=&quot;https://cs.anu.edu.au/courses/comp2300/&quot;&gt;using&lt;/a&gt;
&lt;a href=&quot;https://cs.anu.edu.au/courses/comp2710-lens/&quot;&gt;computers&lt;/a&gt;, it‚Äôs often useful to
give people hints about keybindings which could make their lives easier.
However, this is tricky when it comes to the control key/command key keybinding
convention on macOS vs Windows/Linux.&lt;/p&gt;

&lt;p&gt;In the past, I‚Äôve just written things like:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;To save the file, hit &lt;kbd class=&quot;nopretty&quot;&gt;CTRL&lt;/kbd&gt;+&lt;kbd&gt;S&lt;/kbd&gt; to save
(or &lt;kbd class=&quot;nopretty&quot;&gt;‚åò&lt;/kbd&gt;+&lt;kbd&gt;S&lt;/kbd&gt; if you‚Äôre on macOS)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;which gets &lt;em&gt;really tedious&lt;/em&gt; when you have to repeat it every time.&lt;/p&gt;

&lt;p&gt;So, I wrote a little bit of javascript which&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;scans the document for any &lt;kbd class=&quot;nopretty&quot;&gt;control&lt;/kbd&gt; elements&lt;/li&gt;
  &lt;li&gt;if it detects&lt;sup id=&quot;fnref:detection&quot;&gt;&lt;a href=&quot;#fn:detection&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; you‚Äôre viewing the site on macOS, changes it to
&lt;kbd class=&quot;nopretty&quot;&gt;‚åò&lt;/kbd&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;It actually searches for all of &lt;kbd class=&quot;nopretty&quot;&gt;control&lt;/kbd&gt;, &lt;kbd class=&quot;nopretty&quot;&gt;command&lt;/kbd&gt;, &lt;kbd class=&quot;nopretty&quot;&gt;ctrl&lt;/kbd&gt;, &lt;kbd class=&quot;nopretty&quot;&gt;ctl&lt;/kbd&gt; or &lt;kbd class=&quot;nopretty&quot;&gt;cmd&lt;/kbd&gt; and ‚Äúnormalises‚Äù
them to &lt;kbd class=&quot;nopretty&quot;&gt;‚åò&lt;/kbd&gt; (macOS) or &lt;kbd class=&quot;nopretty&quot;&gt;CTRL&lt;/kbd&gt; (otherwise).&lt;/p&gt;

&lt;p&gt;On the off chance that I actually don‚Äôt want it to do this, the script will skip
any &lt;code&gt;&amp;lt;kbd&amp;gt;&lt;/code&gt; element with a &lt;code&gt;nopretty&lt;/code&gt; class.&lt;/p&gt;

&lt;p&gt;If you‚Äôre interested, the script looks like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;window.addEventListener('DOMContentLoaded', (event) =&amp;gt; {

  // replace all these with the appropriate modifier for the platform
  let modKeys = [&quot;control&quot;, &quot;command&quot;, &quot;ctrl&quot;, &quot;ctl&quot;, &quot;cmd&quot;];

  let modifier = navigator.appVersion.indexOf(&quot;Mac&quot;)!=-1 ? &quot;‚åò&quot; : &quot;CTRL&quot;;

  for (const kbdElement of document.querySelectorAll(&quot;kbd&quot;)) {
	if (modKeys.includes(kbdElement.textContent.toLowerCase()) &amp;amp;&amp;amp; !kbdElement.classList.contains(&quot;nopretty&quot;)){
	  kbdElement.textContent = modifier;
	}
  }
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In case I make any tweaks, you can always find the latest version in my &lt;a href=&quot;https://github.com/benswift/benswift.github.io/blob/source/assets/js/os-aware-modifiers.js&quot;&gt;blog
source on
GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:detection&quot;&gt;
      &lt;p&gt;it‚Äôll work in &lt;em&gt;most&lt;/em&gt; cases; foolproof OS autodetection is really hard¬†&lt;a href=&quot;#fnref:detection&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Ben Swift</name></author><summary type="html">As someone who writes a lot of web-based documentation for using computers, it‚Äôs often useful to give people hints about keybindings which could make their lives easier. However, this is tricky when it comes to the control key/command key keybinding convention on macOS vs Windows/Linux.</summary></entry><entry><title type="html">ICLC Extempore workshop</title><link href="https://benswift.me/iclc-workshop/" rel="alternate" type="text/html" title="ICLC Extempore workshop" /><published>2020-02-06T00:00:00+11:00</published><updated>2020-02-06T00:00:00+11:00</updated><id>https://benswift.me/iclc-extempore-workshop</id><content type="html" xml:base="https://benswift.me/iclc-workshop/">&lt;p&gt;If you‚Äôre here for the &lt;a href=&quot;https://www.eventbrite.ie/e/introduction-to-music-making-in-extempore-tickets-89794851819&quot;&gt;ICLC Extempore
workshop&lt;/a&gt;
&lt;em&gt;Introduction to music-making in Extempore&lt;/em&gt;, then welcome!&lt;/p&gt;

&lt;p&gt;Here are the details if you‚Äôre still trying to find us:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Date&lt;/strong&gt;: Thu 6 Feb 2020&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Time&lt;/strong&gt;: 14:30‚Äì18:30 GMT&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Location&lt;/strong&gt;: Room CSG-013, Computer Science Building (building 8 on the
&lt;a href=&quot;https://www.ul.ie/buildings/sites/default/files/travel-uploads/Campus%20Map%20Update%2028-06-2017%20Website%20A3%20Final.pdf&quot;&gt;campus
map&lt;/a&gt;),
University of Limerick&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;workshop-outline&quot;&gt;Workshop outline&lt;/h2&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1430&lt;/td&gt;
      &lt;td&gt;intro &amp;amp; getting to know each other&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1500&lt;/td&gt;
      &lt;td&gt;Extempore hacking&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1615&lt;/td&gt;
      &lt;td&gt;&lt;em&gt;afternoon tea break&lt;/em&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1630&lt;/td&gt;
      &lt;td&gt;moar Extempore hacking&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1730&lt;/td&gt;
      &lt;td&gt;demos&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1800&lt;/td&gt;
      &lt;td&gt;open feedback&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;intro&quot;&gt;Intro&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;about me&lt;/li&gt;
  &lt;li&gt;potted history of &lt;a href=&quot;https://github.com/digego/extempore&quot;&gt;Extempore&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;what we will/might/won‚Äôt cover today (a JIT workshop!)&lt;/li&gt;
  &lt;li&gt;meet one another, goal setting, CoC&lt;/li&gt;
&lt;/ul&gt;

&lt;picture&gt;
  &lt;img alt=&quot;two roads diverged...&quot; src=&quot;/assets/images/posts/jens-lelie-u0vgcIOQG08-unsplash.jpg&quot; /&gt;
&lt;/picture&gt;

&lt;h2 id=&quot;extempore-hacking&quot;&gt;Extempore hacking&lt;/h2&gt;

&lt;p&gt;First, set Extempore up on your machine using the &lt;a href=&quot;https://extemporelang.github.io/docs/overview/quickstart/&quot;&gt;quickstart
instructions&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Then, depending on which path you‚Äôd like to go down first, continue to either
the &lt;a href=&quot;https://extemporelang.github.io/docs/guides/sharedsystem/&quot;&gt;sharedsystem (synthesis &amp;amp; sampling)
guide&lt;/a&gt; or the
&lt;a href=&quot;https://extemporelang.github.io/docs/guides/pattern-language/&quot;&gt;pattern language
guide&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;demo-time--open-feedback&quot;&gt;Demo time &amp;amp; open feedback&lt;/h2&gt;

&lt;p&gt;At the end of the workshop, there will be a chance to share with the group both
the things you‚Äôve made today and any thoughts on how we can do things
(Extempore-wise) better, friendlier, open-er and more accessible. Improving the
onboarding experience for Extempore is one of my big goals this year, so all
attendees get a chance to contribute to that broader mission.&lt;/p&gt;</content><author><name>Ben Swift</name></author><category term="extempore" /><category term="livecode" /><category term="teaching" /><summary type="html">If you‚Äôre here for the ICLC Extempore workshop Introduction to music-making in Extempore, then welcome!</summary></entry><entry><title type="html">ACMC ‚Äò20 submissions now open</title><link href="https://benswift.me/blog/2020/01/29/acmc-20-submissions-now-open/" rel="alternate" type="text/html" title="ACMC '20 submissions now open" /><published>2020-01-29T00:00:00+11:00</published><updated>2020-01-29T00:00:00+11:00</updated><id>https://benswift.me/blog/2020/01/29/acmc-20-submissions-now-open</id><content type="html" xml:base="https://benswift.me/blog/2020/01/29/acmc-20-submissions-now-open/">&lt;p&gt;Good news everyone; we‚Äôre hosting the annual &lt;a href=&quot;https://acmc2020.com/&quot;&gt;Australasian Computer Music
Conference&lt;/a&gt; (ACMC) at the ANU this year from July 8‚Äì11.
ACMC is a festival of gigs, talks, installations and hands-on tutorials designed
to inspire, challenge, and showcase the computer music community. There‚Äôs lots
more information on the &lt;a href=&quot;https://acmc2020.com/&quot;&gt;conference website&lt;/a&gt;.&lt;/p&gt;

&lt;picture&gt;
  &lt;img alt=&quot;live computer music &amp;amp; visuals at ACMC'19&quot; src=&quot;/assets/images/posts/acmc-2019-allsop-gig.jpg&quot; /&gt;
&lt;/picture&gt;

&lt;p class=&quot;hl-para&quot;&gt;The call for submissions‚Äîpapers, artist talks, performances, workshops,
tutorials and more‚Äî&lt;a href=&quot;https://acmc2020.com/#/features/03-submission&quot;&gt;is now
open&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;whos-it-for-and-why-should-you-come&quot;&gt;Who‚Äôs it for, and why should you come?&lt;/h2&gt;

&lt;p&gt;Sure, it‚Äôs hosted at an academic institution, but ACMC isn‚Äôt just for
professors. This year‚Äôs conference theme is &lt;strong&gt;inclusion&lt;/strong&gt;, and so we‚Äôre trying
really hard to make it easy for &lt;em&gt;all&lt;/em&gt; folks who love making noise with
computers, especially those who are often locked out of these sorts of events
for various reasons. We‚Äôre offering free/cheap conference tickets and even
scholarships to make that happen.&lt;/p&gt;

&lt;p&gt;So, if you‚Äôre reading this and you have some sort of creative practice which
involves computers/technology and sound/music, then I‚Äôd &lt;em&gt;love it&lt;/em&gt; if you‚Äôd apply
to come and show us your stuff. If you‚Äôre worried that your stuff is suitable,
then (1) it probably is, and (2) I‚Äôm really happy to discuss it with you to help
you figure out how best to participate‚Äîjust &lt;a href=&quot;mailto:ben.swift@anu.edu.au&quot;&gt;send me an
email&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you‚Äôre not interested in submitting your own work, then mark those dates
(July 8‚Äì11) in your diary and stay tuned for when we release the program. We‚Äôre
also going to be running a bunch of workshops in the days before &amp;amp; after the
conference, so this could be your chance to start making music with computers
like you‚Äôve always dreamed of üòä&lt;/p&gt;</content><author><name>Ben Swift</name></author><category term="gigs" /><category term="acma" /><category term="livecoding" /><summary type="html">Good news everyone; we‚Äôre hosting the annual Australasian Computer Music Conference (ACMC) at the ANU this year from July 8‚Äì11. ACMC is a festival of gigs, talks, installations and hands-on tutorials designed to inspire, challenge, and showcase the computer music community. There‚Äôs lots more information on the conference website.</summary></entry><entry><title type="html">Extempore workshop @ ICLC ‚Äò20, Feb 6, Limerick IE</title><link href="https://benswift.me/blog/2020/01/28/extempore-workshop-iclc-20-feb-6-limerick-ie/" rel="alternate" type="text/html" title="Extempore workshop @ ICLC '20, Feb 6, Limerick IE" /><published>2020-01-28T00:00:00+11:00</published><updated>2020-01-28T00:00:00+11:00</updated><id>https://benswift.me/blog/2020/01/28/extempore-workshop-iclc-20-feb-6-limerick-ie</id><content type="html" xml:base="https://benswift.me/blog/2020/01/28/extempore-workshop-iclc-20-feb-6-limerick-ie/">&lt;p&gt;If you‚Äôre coming to the upcoming &lt;a href=&quot;http://iclc.toplap.org/2020/&quot;&gt;International Conference on Live
Coding&lt;/a&gt; (ICLC ‚Äò20) in Limerick,
Ireland, then it‚Äôs not too late to sign up for my workshop &lt;strong&gt;Introduction to
music-making in Extempore&lt;/strong&gt;. Even if you‚Äôre not coming to the rest of the
conference, you can still sign up for the workshop.&lt;/p&gt;

&lt;picture&gt;
  &lt;img alt=&quot;Harrison &amp;amp; Fi making mad beats with Extempore&quot; src=&quot;/assets/images/posts/extempore-iclc-workshop-promo.jpg&quot; /&gt;
&lt;/picture&gt;

&lt;p&gt;This workshop will provide a hands-on introduction to making music in the live
coding programming environment &lt;a href=&quot;https://github.com/digego/extempore&quot;&gt;Extempore&lt;/a&gt;.
The workshop will cover:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;the fundamentals of making sound (starting from ‚Äúhello sine‚Äù)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;an overview of Extempore‚Äôs audio signal chain (especially the built-in and
highly configurable modular synth)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;introduction to note-level live coding with the Extempore pattern language&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;No Extempore or previous live coding experience necessary (although experienced
practitioners are welcome as well). Just bring a laptop with macOS, Windows or
Ubuntu installed and we‚Äôll start from scratch. All the required software is
freely-available, and a binary release of Extempore will be provided (for
Windows/macOS) so those users won‚Äôt need to build Extempore from scratch&lt;/p&gt;

&lt;p&gt;Registration is through
&lt;a href=&quot;https://www.eventbrite.ie/e/introduction-to-music-making-in-extempore-tickets-89794851819&quot;&gt;Eventbrite&lt;/a&gt;,
and if you‚Äôve got any questions &lt;a href=&quot;mailto:ben.swift@anu.edu.au&quot;&gt;send me an email&lt;/a&gt;
or &lt;a href=&quot;https://twitter.com/benswift&quot;&gt;ping me on twitter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;p.s. shout-out to Harrison &amp;amp; Fi for posing for the workshop promo photo&lt;/em&gt; üì∏&lt;/p&gt;</content><author><name>Ben Swift</name></author><category term="extempore" /><category term="livecoding" /><summary type="html">If you‚Äôre coming to the upcoming International Conference on Live Coding (ICLC ‚Äò20) in Limerick, Ireland, then it‚Äôs not too late to sign up for my workshop Introduction to music-making in Extempore. Even if you‚Äôre not coming to the rest of the conference, you can still sign up for the workshop.</summary></entry><entry><title type="html">Upcoming gig: smoke, Jan 30</title><link href="https://benswift.me/blog/2020/01/28/upcoming-gig-smoke-jan-30/" rel="alternate" type="text/html" title="Upcoming gig: smoke, Jan 30" /><published>2020-01-28T00:00:00+11:00</published><updated>2020-01-28T00:00:00+11:00</updated><id>https://benswift.me/blog/2020/01/28/upcoming-gig-smoke-jan-30</id><content type="html" xml:base="https://benswift.me/blog/2020/01/28/upcoming-gig-smoke-jan-30/">&lt;picture&gt;
  &lt;img alt=&quot;ad for Smoke gig - see FB event for details&quot; src=&quot;/assets/images/posts/smoke-gig-ad-Jan-2020.jpg&quot; /&gt;
&lt;/picture&gt;

&lt;p class=&quot;hl-para&quot;&gt;Update: the &lt;a href=&quot;/livecoding/2020-01-30-smoke.html&quot;&gt;video is now online&lt;/a&gt;‚Äîthanks to Charles for putting it together.&lt;/p&gt;

&lt;p&gt;If you‚Äôre in Canberra this Thursday Jan 30 then you should come to a (free) gig
that the c/c/c studio is putting on in the &lt;a href=&quot;https://www.anu.edu.au/maps#show=29113&quot;&gt;Peter
Karmel&lt;/a&gt; Big Band room (at the ANU School
of Music).&lt;/p&gt;

&lt;p&gt;Get away from the &lt;a href=&quot;https://www.canberratimes.com.au/story/6600587/namadgi-fire-now-at-2575ha-total-fire-ban-declared/&quot;&gt;fires &amp;amp;
smoke&lt;/a&gt;&lt;sup id=&quot;fnref:fires&quot;&gt;&lt;a href=&quot;#fn:fires&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;
and come see an evening of experimental sounds in processed voice, livecoding,
and neural networks with musicians from the ANU code/creativity/culture studio
and special guest &lt;a href=&quot;https://www.fisounds.com&quot;&gt;Fiona Sullivan&lt;/a&gt; (USA). There‚Äôs a
&lt;a href=&quot;https://www.facebook.com/events/541225126490467/&quot;&gt;FB event page&lt;/a&gt; as well if
you‚Äôre into that sort of thing.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;time&lt;/strong&gt;: 5:45pm‚Äì7pm&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;location&lt;/strong&gt; Big Band Room, &lt;a href=&quot;https://www.anu.edu.au/maps#show=29113&quot;&gt;Peter Karmel
Building&lt;/a&gt;, ANU School of Music&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;cost&lt;/strong&gt;: free&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here‚Äôs the setlist:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;time&lt;/th&gt;
      &lt;th&gt;artist&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;6:00pm&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;http://charlesmartin.com.au&quot;&gt;Charles Martin&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;6:10pm&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://www.fisounds.com&quot;&gt;Fiona Sullivan&lt;/a&gt; (USA), Ben Swift, &lt;a href=&quot;https://kieranbrowne.com&quot;&gt;Kieran Browne&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;6:25pm&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://chloecomposes.com&quot;&gt;Chlo√´ Hobbs&lt;/a&gt;, &lt;a href=&quot;https://www.alexanderhunter.com.au&quot;&gt;Alec Hunter&lt;/a&gt;, &lt;a href=&quot;http://charlesmartin.com.au&quot;&gt;Charles Martin&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;6:40pm&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://www.fisounds.com&quot;&gt;Fiona Sullivan&lt;/a&gt; (USA)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;em&gt;7:00pm&lt;/em&gt;&lt;/td&gt;
      &lt;td&gt;&lt;em&gt;finish&lt;/em&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;If you‚Äôre wondering when I‚Äôm on, I‚Äôm the ‚ÄúB‚Äù in FBK, alongside Kieran and Fiona.&lt;/p&gt;

&lt;p&gt;Kieran will be livecoding visuals in GLSL, Charles will be (very musically!)
fighting with his AI, I‚Äôll be dropping beats in Extempore and Fi will be
&lt;em&gt;amazing&lt;/em&gt;. See you there.&lt;/p&gt;

&lt;p&gt;Note: if you‚Äôve never been there before, the &lt;a href=&quot;https://www.anu.edu.au/maps#show=29113&quot;&gt;Peter Karmel
building&lt;/a&gt; is the one next to the ‚Äúmain‚Äù
ANU School of Music building. The Big Band room is off the foyer/atrium, right
near the main entrance.&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:fires&quot;&gt;

      &lt;p&gt;I know that you can‚Äôt get away from them; and the loss of flora &amp;amp; fauna is
heartbreaking, not to mention the human cost.¬†&lt;a href=&quot;#fnref:fires&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Ben Swift</name></author><category term="gigs" /><category term="livecoding" /><summary type="html"></summary></entry><entry><title type="html">Euclidean rhythms in Extempore</title><link href="https://benswift.me/blog/2020/01/27/euclidean-rhythms-in-extempore/" rel="alternate" type="text/html" title="Euclidean rhythms in Extempore" /><published>2020-01-27T00:00:00+11:00</published><updated>2020-01-27T00:00:00+11:00</updated><id>https://benswift.me/blog/2020/01/27/euclidean-rhythms-in-extempore</id><content type="html" xml:base="https://benswift.me/blog/2020/01/27/euclidean-rhythms-in-extempore/">&lt;p&gt;As part of the new Extempore pattern language stuff I added a helper for
generating &lt;a href=&quot;https://en.wikipedia.org/wiki/Euclidean_rhythm&quot;&gt;euclidean rhythms&lt;/a&gt;.
I wrote it (in a recursive style) in Scheme using the algorithm described in
&lt;a href=&quot;http://cgm.cs.mcgill.ca/~godfried/publications/banff-extended.pdf&quot;&gt;Godfried
Toussaint‚Äôs&lt;/a&gt;
paper (although it‚Äôs credited to &lt;em&gt;Bjorklund&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;As well as the obvious musical possibilities, one of the things I noticed when I
was playing around that if one loops through euclidean rhythms of increasing
‚Äúdensity‚Äù the &lt;em&gt;visual representation&lt;/em&gt; exhibits some cool patterns as well.
Here‚Äôs an example of the 17 different rhythms of length 16 (from 0 to 16
inclusive). We can print out the patterns using this loop (using &lt;code&gt;'X&lt;/code&gt; for the
‚Äúhit‚Äù marker so that it looks more prominent in a log view).&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-xtlang&quot;&gt;(dotimes (i 17)
  (println (euclid i 16 'X)))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;What gets printed to the log is:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;(_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _)
(X _ _ _ _ _ _ _ _ _ _ _ _ _ _ _)
(X _ _ _ _ _ _ _ X _ _ _ _ _ _ _)
(X _ _ _ _ _ X _ _ _ _ X _ _ _ _)
(X _ _ _ X _ _ _ X _ _ _ X _ _ _)
(X _ _ _ X _ _ X _ _ X _ _ X _ _)
(X _ _ X _ X _ _ X _ _ X _ X _ _)
(X _ _ X _ X _ X _ X _ _ X _ X _)
(X _ X _ X _ X _ X _ X _ X _ X _)
(X _ X X _ X _ X _ X _ X X _ X _)
(X _ X X _ X _ X X _ X X _ X _ X)
(X _ X X X _ X X _ X X _ X X _ X)
(X _ X X X _ X X X _ X X X _ X X)
(X _ X X X X X _ X X X X _ X X X)
(X _ X X X X X X X _ X X X X X X)
(X _ X X X X X X X X X X X X X X)
(X X X X X X X X X X X X X X X X)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Look, there‚Äôs probably some super-cool mathematical explanation for why this
looks like that. Stephen Wolfram, if you‚Äôre reading, drop me a line and tell me
what it is. But I just thought it looked cool‚ÄîI‚Äôm sure there are generative
art possibilities here as well (they may have already been explored).&lt;/p&gt;</content><author><name>Ben Swift</name></author><category term="extempore" /><summary type="html">As part of the new Extempore pattern language stuff I added a helper for generating euclidean rhythms. I wrote it (in a recursive style) in Scheme using the algorithm described in Godfried Toussaint‚Äôs paper (although it‚Äôs credited to Bjorklund).</summary></entry></feed>