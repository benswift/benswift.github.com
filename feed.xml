<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.6">Jekyll</generator><link href="https://benswift.me/feed.xml" rel="self" type="application/atom+xml" /><link href="https://benswift.me/" rel="alternate" type="text/html" /><updated>2019-10-14T09:29:05+11:00</updated><id>https://benswift.me/feed.xml</id><title type="html">benswift.me</title><subtitle>livecoder &amp; researcher homepage - code, creativity, culture</subtitle><author><name>Ben Swift</name></author><entry><title type="html">IoT China Study Tour not happening in 2019</title><link href="https://benswift.me/blog/2019/10/14/iot-china-study-tour-not-happening-in-2019/" rel="alternate" type="text/html" title="IoT China Study Tour not happening in 2019" /><published>2019-10-14T00:00:00+11:00</published><updated>2019-10-14T00:00:00+11:00</updated><id>https://benswift.me/blog/2019/10/14/iot-china-study-tour-not-happening-in-2019</id><content type="html" xml:base="https://benswift.me/blog/2019/10/14/iot-china-study-tour-not-happening-in-2019/">&lt;p&gt;Hey, ANU students,&lt;/p&gt;

&lt;p&gt;In the (Australian) Summer of ‘16/17, ‘17/18 and ‘18/19 I ran an &lt;a href=&quot;https://cs.anu.edu.au/courses/china-study-tour/&quot;&gt;&lt;em&gt;Internet of
Things&lt;/em&gt; China Study Tour&lt;/a&gt; at
the Beijing Institute of Technology. They were good times.&lt;/p&gt;

&lt;picture&gt;&lt;img alt=&quot;a bunch of students
and I at the Great Wall of China in Dec. 2018&quot; src=&quot;/assets/images/posts/great-wall-of-china-2018-5f9aa3802a2f2d7c27db5da9116ce8f8968814fa823763a09b7a97b35d11b5b3.jpg&quot; /&gt;&lt;/picture&gt;

&lt;p&gt;However, the &lt;a href=&quot;https://dfat.gov.au/people-to-people/new-colombo-plan/about/Pages/about.aspx&quot;&gt;New Colombo
Plan&lt;/a&gt;
grant (which provided the money for us to provide the travel &amp;amp; accommodation
scholarships for the study tour) expired last year—it was only a 3-year thing.
As a result, the BIT trip is not running this year (Summer ‘19/20). It &lt;em&gt;might&lt;/em&gt;
happen in future years (if we get more grant funding) but I’m afraid I can’t be
certain about that.&lt;/p&gt;

&lt;p&gt;If you’re interested in “study abroad” opportunities more generally then the
nice folks at &lt;a href=&quot;https://www.anu.edu.au/students/careers-opportunities/global-programs&quot;&gt;ANU Global
Programs&lt;/a&gt;
are the best people to talk to.&lt;/p&gt;</content><author><name>Ben Swift</name></author><summary type="html">Hey, ANU students,</summary></entry><entry><title type="html">Laptop Ensemble in the Canberra Times</title><link href="https://benswift.me/blog/2019/10/01/laptop-ensemble-in-the-canberra-times/" rel="alternate" type="text/html" title="Laptop Ensemble in the Canberra Times" /><published>2019-10-01T00:00:00+10:00</published><updated>2019-10-01T00:00:00+10:00</updated><id>https://benswift.me/blog/2019/10/01/laptop-ensemble-in-the-canberra-times</id><content type="html" xml:base="https://benswift.me/blog/2019/10/01/laptop-ensemble-in-the-canberra-times/">&lt;p&gt;The ANU Laptop Ensemble (LENS) is in the Canberra Times this morning: &lt;a href=&quot;https://www.canberratimes.com.au/story/6412297/anu-school-of-musics-new-orchestra-is-far-from-conventional/&quot;&gt;ANU
School of Music’s new orchestra is far from
conventional&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;There’s some really encouraging stuff in there from ANU School of Music head
&lt;a href=&quot;https://music.cass.anu.edu.au/people/associate-professor-kim-cunio&quot;&gt;Kim Cunio&lt;/a&gt;
about the role of code in music-making:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“We want to re-imagine what an orchestra is,” he says. “My vision is to train
musicians that are part composers, part mathematicians, and part computer
hackers.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I’m so pumped—this is exactly what I’ve been trying to do for several years,
and having Kim on board as an ally is very encouraging. Along with the CECS
Reimagine agenda (including their support of my &lt;a href=&quot;/blog/2019/08/30/Im-a-reimagine-fellow/&quot;&gt;fellowship&lt;/a&gt; to put together the &lt;a href=&quot;/blog/2019/03/20/reimagine-fellow-project-pitch/&quot;&gt;c/c/c
studio&lt;/a&gt;) and the great things
happening &lt;a href=&quot;https://soad.cass.anu.edu.au&quot;&gt;elsewhere&lt;/a&gt; in
&lt;a href=&quot;https://cdhr.cass.anu.edu.au&quot;&gt;CASS&lt;/a&gt;, there’s good vibes in the air around
cross-disiplinary code, creativity and culture at the ANU.&lt;/p&gt;

&lt;p&gt;The article ends by saying:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Cunio hopes experiments with science, maths and technology will also open
“back doors” into music for a new breed of student.&lt;/p&gt;

  &lt;p&gt;“Sometimes the best musicians are lost to music.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I suspect that sometimes the best computer scientists are lost to CS as well.
Hopefully programs like the LENS can change that.&lt;/p&gt;</content><author><name>Ben Swift</name></author><category term="teaching" /><category term="reimagine" /><category term="lens" /><summary type="html">The ANU Laptop Ensemble (LENS) is in the Canberra Times this morning: ANU School of Music’s new orchestra is far from conventional.</summary></entry><entry><title type="html">Mapping the livecoding landscape</title><link href="https://benswift.me/blog/2019/09/21/mapping-the-livecoding-landscape/" rel="alternate" type="text/html" title="Mapping the livecoding landscape" /><published>2019-09-21T00:00:00+10:00</published><updated>2019-09-21T00:00:00+10:00</updated><id>https://benswift.me/blog/2019/09/21/mapping-the-livecoding-landscape</id><content type="html" xml:base="https://benswift.me/blog/2019/09/21/mapping-the-livecoding-landscape/">&lt;h2 id=&quot;people&quot;&gt;People&lt;/h2&gt;

&lt;ul&gt;

&lt;li&gt;
  &lt;a style=&quot;font-weight: 900;&quot; href=&quot;https://twitter.com/digego&quot;&gt;Andrew Sorensen&lt;/a&gt;,
  &lt;span style=&quot;font-style: italic;&quot;&gt;indie&lt;/span&gt;
&lt;/li&gt;

&lt;li&gt;
  &lt;a style=&quot;font-weight: 900;&quot; href=&quot;https://yaxu.org&quot;&gt;Alex McLean&lt;/a&gt;,
  &lt;span style=&quot;font-style: italic;&quot;&gt;indie&lt;/span&gt;
&lt;/li&gt;

&lt;li&gt;
  &lt;a style=&quot;font-weight: 900;&quot; href=&quot;http://wertlos.org/~rohrhuber/&quot;&gt;Juilan Rohrhuber&lt;/a&gt;,
  &lt;span style=&quot;font-style: italic;&quot;&gt;Institute for Music and Media, RSH Düsseldorf&lt;/span&gt;
&lt;/li&gt;

&lt;li&gt;
  &lt;a style=&quot;font-weight: 900;&quot; href=&quot;http://andrewrbrown.net.au/&quot;&gt;Andrew Brown&lt;/a&gt;,
  &lt;span style=&quot;font-style: italic;&quot;&gt;Queensland College of Art, Griffith University&lt;/span&gt;
&lt;/li&gt;

&lt;li&gt;
  &lt;a style=&quot;font-weight: 900;&quot; href=&quot;https://www.dur.ac.uk/music/staff/profile/?id=11477&quot;&gt;Nick Collins&lt;/a&gt;,
  &lt;span style=&quot;font-style: italic;&quot;&gt;Department of Music, Durham University&lt;/span&gt;
&lt;/li&gt;

&lt;li&gt;
  &lt;a style=&quot;font-weight: 900;&quot; href=&quot;http://thormagnusson.github.io/&quot;&gt;Thor Magnusson&lt;/a&gt;,
  &lt;span style=&quot;font-style: italic;&quot;&gt;Music Department, University of Sussex&lt;/span&gt;
&lt;/li&gt;

&lt;li&gt;
  &lt;a style=&quot;font-weight: 900;&quot; href=&quot;https://www.gewang.com&quot;&gt;Ge Wang&lt;/a&gt;,
  &lt;span style=&quot;font-style: italic;&quot;&gt;CCRMA, Stanford University&lt;/span&gt;
&lt;/li&gt;

&lt;li&gt;
  &lt;a style=&quot;font-weight: 900;&quot; href=&quot;http://sam.aaron.name/&quot;&gt;Sam Aaron&lt;/a&gt;,
  &lt;span style=&quot;font-style: italic;&quot;&gt;indie&lt;/span&gt;
&lt;/li&gt;

&lt;li&gt;
  &lt;a style=&quot;font-weight: 900;&quot; href=&quot;https://www.cl.cam.ac.uk/~afb21/&quot;&gt;Alan Blackwell&lt;/a&gt;,
  &lt;span style=&quot;font-style: italic;&quot;&gt;Cambridge Computer Laboratory&lt;/span&gt;
&lt;/li&gt;

&lt;li&gt;
  &lt;a style=&quot;font-weight: 900;&quot; href=&quot;https://fo.am/people/dave/&quot;&gt;Dave Griffiths&lt;/a&gt;,
  &lt;span style=&quot;font-style: italic;&quot;&gt;FoAM Kernow&lt;/span&gt;
&lt;/li&gt;

&lt;li&gt;
  &lt;a style=&quot;font-weight: 900;&quot; href=&quot;https://shellyknotts.wordpress.com&quot;&gt;Shelley Knotts&lt;/a&gt;,
  &lt;span style=&quot;font-style: italic;&quot;&gt;Department of Music, Durham University&lt;/span&gt;
&lt;/li&gt;

&lt;li&gt;
  &lt;a style=&quot;font-weight: 900;&quot; href=&quot;https://twitter.com/joannnne&quot;&gt;Joanne Armitage&lt;/a&gt;,
  &lt;span style=&quot;font-style: italic;&quot;&gt;School of Media and Communication, University of Leeds&lt;/span&gt;
&lt;/li&gt;

&lt;li&gt;
  &lt;a style=&quot;font-weight: 900;&quot; href=&quot;http://renickbell.net/&quot;&gt;Renick Bell&lt;/a&gt;,
  &lt;span style=&quot;font-style: italic;&quot;&gt;indie&lt;/span&gt;
&lt;/li&gt;

&lt;li&gt;
  &lt;a style=&quot;font-weight: 900;&quot; href=&quot;http://www.dktr0.net&quot;&gt;David Ogborn&lt;/a&gt;,
  &lt;span style=&quot;font-style: italic;&quot;&gt;Department of Communication Studies and Multimedia, McMaster University&lt;/span&gt;
&lt;/li&gt;

&lt;li&gt;
  &lt;a style=&quot;font-weight: 900;&quot; href=&quot;http://charlie-roberts.com/&quot;&gt;Charlie Roberts&lt;/a&gt;,
  &lt;span style=&quot;font-style: italic;&quot;&gt;Computer Science, Worcester Polytechnic Institute&lt;/span&gt;
&lt;/li&gt;

&lt;li&gt;
  &lt;a style=&quot;font-weight: 900;&quot; href=&quot;http://blog.sicchio.com/&quot;&gt;Kate Sicchio&lt;/a&gt;,
  &lt;span style=&quot;font-style: italic;&quot;&gt;Integrated Digital Media, New York University&lt;/span&gt;
&lt;/li&gt;

&lt;li&gt;
  &lt;a style=&quot;font-weight: 900;&quot; href=&quot;https://www.cyberpunk.net.ar&quot;&gt;Mauro&lt;/a&gt;,
  &lt;span style=&quot;font-style: italic;&quot;&gt;indie&lt;/span&gt;
&lt;/li&gt;

&lt;li&gt;
  &lt;a style=&quot;font-weight: 900;&quot; href=&quot;https://www.jackarmitage.com/&quot;&gt;Jack Armitage&lt;/a&gt;,
  &lt;span style=&quot;font-style: italic;&quot;&gt;Centre for Digital Music, Queen Mary University of London&lt;/span&gt;
&lt;/li&gt;

&lt;li&gt;
  &lt;a style=&quot;font-weight: 900;&quot; href=&quot;http://luisnavarrodelangel.net/&quot;&gt;Luis Navarro Del Angel&lt;/a&gt;,
  &lt;span style=&quot;font-style: italic;&quot;&gt;Department of Communication Studies and Multimedia, McMaster University&lt;/span&gt;
&lt;/li&gt;

&lt;li&gt;
  &lt;a style=&quot;font-weight: 900;&quot; href=&quot;http://kindohm.com/&quot;&gt;Mike Hodnick&lt;/a&gt;,
  &lt;span style=&quot;font-style: italic;&quot;&gt;indie&lt;/span&gt;
&lt;/li&gt;

&lt;/ul&gt;

&lt;h2 id=&quot;iclc-committees&quot;&gt;ICLC committees&lt;/h2&gt;

&lt;h3 id=&quot;2020-limerick-ireland&quot;&gt;2020 Limerick, Ireland&lt;/h3&gt;

&lt;p&gt;Programme Chair: Giuseppe Torre&lt;/p&gt;

&lt;p&gt;Performances Chair: Neil O’Connor&lt;/p&gt;

&lt;p&gt;Workshops Chair: Nicholas Ward&lt;/p&gt;

&lt;p&gt;Installations Chair: Nora O Murchú&lt;/p&gt;

&lt;h3 id=&quot;2019-madrid-spain&quot;&gt;2019 Madrid, Spain&lt;/h3&gt;

&lt;p&gt;Chair - Jesús Jara López
Co-Chair - Lina Bautista
Co-Chair - Iván Paz
Performance Chair - Juan A. Romero
Scientific Chair - Enrike Hurtado
Installations/Workshops Coordinator - Joaquín Díaz Durán
Production Adviser - Maite Camacho
Identity &amp;amp; Web - Adrián Cano/Jana Domínguez
Assistance - Live Code Mad&lt;/p&gt;

&lt;h3 id=&quot;2017-morelia-méxico&quot;&gt;2017 Morelia, México&lt;/h3&gt;

&lt;h4 id=&quot;core-organising-committee&quot;&gt;Core organising committee&lt;/h4&gt;

&lt;p&gt;Chair - Alexandra Cárdenas
Co-Chair Ernesto Romero
Co-Chair Luis Navarro del Angel
Performance Chair - Jorge Ramírez
Scientific Chair - Juan Sebastián Lach
Production Adviser - Minerva Hernández Trejo
Identity &amp;amp; Web - Karen del Valle, Rodrigo Velasco, Felipe Ignacio
Networks - Malitzin Cortés&lt;/p&gt;

&lt;h4 id=&quot;steering-committee&quot;&gt;Steering Committee&lt;/h4&gt;

&lt;p&gt;David Ogborn, Chair (McMaster University)
Alex McLean (Deutsches Museum)
Shelly Knotts (Durham University)
Thor Magnusson (University of Sussex)
Kate Sicchio (New York University)
Graham Wakefield (York University)&lt;/p&gt;

&lt;h3 id=&quot;2016-mcmaster-university-canada&quot;&gt;2016 McMaster University, Canada&lt;/h3&gt;

&lt;h4 id=&quot;local-organising-committee&quot;&gt;Local organising committee&lt;/h4&gt;

&lt;p&gt;David Ogborn, General chair (McMaster University)
Graham Wakefield, Co-chair (York University)
Christina Baade, Scientific programme committee chair (McMaster University)
Kate Sicchio, Artistic programme committee chair (New York University)
Tanya Goncalves, Workshops chair (McMaster University)
Harold Sikkema, Design and videography coordinator (McMaster University)&lt;/p&gt;

&lt;h4 id=&quot;steering-committee-1&quot;&gt;Steering committee&lt;/h4&gt;

&lt;p&gt;Alex McLean, Chair (FoAM Kernow)
Shelly Knotts (Durham University)
Thor Magnusson (University of Sussex)
David Ogborn (McMaster University)
Kate Sicchio (Parsons the New School for Design)
Graham Wakefield (York University)&lt;/p&gt;

&lt;h4 id=&quot;programme-committee&quot;&gt;Programme committee&lt;/h4&gt;

&lt;p&gt;Samuel Aaron (University of Cambridge)
Amy Alexander (University of California, San Diego)
Juan Alzate Romero (IMWI - HfM Karlsruhe)
Joanne Armitage (University of Leeds)
Christina Baade (McMaster University)
Holger Ballweg (Northumbria University)
Sara Bannerman (McMaster University)
Renick Bell
Yael Benn (Manchester Metropolitan University)
Daven Bigelow (McMaster University)
Alan Blackwell (University of Cambridge)
Patrick Borgeat (University of Music, Karlsruhe)
Victoria Bradbury (Alfred University / NYSCC / SoAD)
Karen Burland (University of Leeds)
Pam Burnard (University of Cambridge)
Alexandra Cárdenas (University of the Arts, Berlin)
Jacques Carette (McMaster University)
Luke Church (University of Cambridge)
Geoff Cox (Aarhus University)
Georg Essl (University of Michigan)
Andrew Fischer (Shutterfly, Inc)
Paula Gardner (McMaster University)
Tanya Goncalves (McMaster University)
Tom Hall (Anglia Ruskin University)
Mike Hodnick
Aaron Hutchinson (Hamilton Audio-Visual Node)
Ian Jarvis (York University)
Ali Khajehei (McMaster University)
Chris Kiefer (University of Sussex)
Shelly Knotts (Durham University)
Shawn Lawson (Rensselaer Polytechnic Institute)
Sang Won Lee (University of Michigan)
Thor Magnusson (University of Sussex)
Alex McLean (FoAM Kernow)
James Noble (Victoria University of Wellington)
Matthew Paine (McMaster University)
Roly Perera (University of Glasgow, University of Edinburgh)
Charlie Roberts (Rochester Institute of Technology)
Julian Rohrhuber (Institute For Music And Media, Robert Schumann Hochschule)
Adriana Sa (Goldsmiths College, University of London)
Kate Sicchio (Parsons the New School for Design)
Harold Sikkema (McMaster University)
Dagobert Sondervan
Andrew Sorensen
Dana Swarbrick (McMaster University)
Ben Swift (Australian National University)
Steven Tanimoto (University of Washington)
Eldad Tsabary (Concordia University)
Anne Veinberg (Orpheus Institute/Leiden University/Conservatorium Amsterdam)
Graham Wakefield (York University)
Joseph Wilk (Poetic Computation)
Scott Wilson (University of Birmingham)
Matthew Yee-King (Goldsmiths College, University of London)
Andrea Zeffiro (McMaster University)&lt;/p&gt;

&lt;h3 id=&quot;2015-university-of-leeds-uk&quot;&gt;2015 University of Leeds, UK&lt;/h3&gt;

&lt;h4 id=&quot;core-organising-committee-1&quot;&gt;Core organising committee&lt;/h4&gt;

&lt;p&gt;Alex McLean, General chair (University of Leeds)
Thor Magnusson, Co-chair (University of Sussex)
Kia Ng, Scientific programme committee chair (University of Leeds)
Shelly Knotts, Artistic programme committee chair (University of Durham)
Joanne Armitage, Workshop and special events chair (University of Leeds)&lt;/p&gt;

&lt;h4 id=&quot;evening-event-producer&quot;&gt;Evening event producer&lt;/h4&gt;

&lt;p&gt;Ash Sagar&lt;/p&gt;

&lt;h4 id=&quot;external-advisors&quot;&gt;External advisors&lt;/h4&gt;

&lt;p&gt;Juan A. Romero
Patrick Borgeat&lt;/p&gt;

&lt;h4 id=&quot;programme-committee-1&quot;&gt;Programme committee&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;same as 2016&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;toplap-nodes&quot;&gt;TOPLAP nodes&lt;/h2&gt;

&lt;p&gt;This list is pinched &lt;em&gt;directly&lt;/em&gt; from the &lt;a href=&quot;https://toplap.org/nodes/&quot;&gt;TOPLAP
website&lt;/a&gt; (as at 21 Sep 2019):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://livecode.nyc/&quot;&gt;Livecode NYC&lt;/a&gt; (USA)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.facebook.com/groups/1683408058575303/&quot;&gt;TOPLAP Node Yorkshire&lt;/a&gt; (UK)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.facebook.com/groups/897471030365142/&quot;&gt;TOPLAP Node North-East&lt;/a&gt; (UK)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.facebook.com/toplap.mx/&quot;&gt;TOPLAP Node México&lt;/a&gt; (MX)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.facebook.com/groups/toplapnodeberlin/1725919034313087/&quot;&gt;Cybernetic Orchestra&lt;/a&gt; (CA)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.facebook.com/groups/toplapnodeberlin/1725919034313087/&quot;&gt;TOPLAP Berlin&lt;/a&gt; (DE)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://noiskate.hotglue.me/?ToplapMedellin&quot;&gt;TOPLAP Medellín&lt;/a&gt; (CO)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.facebook.com/groups/626111581071250/&quot;&gt;TOPLAP Bogotá&lt;/a&gt; (CO)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.facebook.com/groups/583681711997021/&quot;&gt;TOPLAP Quito&lt;/a&gt; (EC)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.facebook.com/groups/362002184270964/&quot;&gt;TOPLAP Lima&lt;/a&gt; (PE)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://livecodear.github.io/&quot;&gt;TOPLAP Buenos Aires&lt;/a&gt; (AR)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://montreal.toplap.org&quot;&gt;Live coding à Montréal&lt;/a&gt; (CA)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://toplapbarcelona.hangar.org/&quot;&gt;TOPLAP Barcelona&lt;/a&gt; (ES)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://twitter.com/toplapjp&quot;&gt;TOPLAP Japan&lt;/a&gt; (JP)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://netherlands-coding-live.github.io&quot;&gt;NL_CL (Netherlands Coding Live) node&lt;/a&gt; (NL)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://w3.impa.br/~vitorgr/livecode/&quot;&gt;Live coding @ IMPA (Rio de Janeiro)&lt;/a&gt; (BR)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.facebook.com/groups/353595622030440/&quot;&gt;TOPLAP Greater Bay Area&lt;/a&gt; (CN)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tidalclub.github.io/sheffield.html&quot;&gt;Tidalclub Sheffield&lt;/a&gt; (UK)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://colectivo-de-livecoders.gitlab.io/&quot;&gt;CLiC (Colectivo de Live Coders)&lt;/a&gt; (AR)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://livecodenewengland.org/&quot;&gt;Livecode New England&lt;/a&gt; (USA)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.facebook.com/groups/1051671308353969/&quot;&gt;TOPLAP Italia&lt;/a&gt; (IT)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.facebook.com/groups/toplapfr/&quot;&gt;TOPLAP France&lt;/a&gt; (FR)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://algorave.fr/&quot;&gt;Algorave France &amp;amp; Belgique&lt;/a&gt; (FR/BE)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.meetup.com/Live-Coding-Frankfurt/&quot;&gt;Live Coding Frankfurt&lt;/a&gt; (DE)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://toplapvaldivia.wixsite.com/website&quot;&gt;TOPLAP Valdiva&lt;/a&gt; (CL)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.facebook.com/groups/587715001671363/&quot;&gt;LiveCoding Düsseldorf&lt;/a&gt; (DE)&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Ben Swift</name></author><category term="livecoding" /><category term="research" /><summary type="html">People</summary></entry><entry><title type="html">Xinyu’s Extempore tutorials</title><link href="https://benswift.me/blog/2019/09/18/xinyus-extempore-tutorials/" rel="alternate" type="text/html" title="Xinyu's Extempore tutorials" /><published>2019-09-18T00:00:00+10:00</published><updated>2019-09-18T00:00:00+10:00</updated><id>https://benswift.me/blog/2019/09/18/xinyus-extempore-tutorials</id><content type="html" xml:base="https://benswift.me/blog/2019/09/18/xinyus-extempore-tutorials/">&lt;p&gt;These tutorials are part of Xinyu Hou’s research project to create a set of
&lt;a href=&quot;https://blogs.kcl.ac.uk/cser/2017/09/01/primm-a-structured-approach-to-teaching-programming/&quot;&gt;PRIMM&lt;/a&gt;-style
tutorials for learning to make sound/music in Extempore.&lt;/p&gt;

&lt;p&gt;They’re currently a work-in-progress—when they’re done they’ll be hosted on
the main Extempore docs site, but for now they’re here on my blog.&lt;/p&gt;

&lt;div id=&quot;toc&quot;&gt;

  &lt;h2&gt;table of contents&lt;/h2&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#preliminaries&quot; id=&quot;markdown-toc-preliminaries&quot;&gt;Preliminaries&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#tutorial-one&quot; id=&quot;markdown-toc-tutorial-one&quot;&gt;Tutorial One&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#tutorial-two&quot; id=&quot;markdown-toc-tutorial-two&quot;&gt;Tutorial Two&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#going-further&quot; id=&quot;markdown-toc-going-further&quot;&gt;Going further&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;

&lt;h2 id=&quot;preliminaries&quot;&gt;Preliminaries&lt;/h2&gt;

&lt;h3 id=&quot;setting-up-environment&quot;&gt;Setting Up Environment&lt;/h3&gt;

&lt;h4 id=&quot;installing-extempore&quot;&gt;Installing Extempore&lt;/h4&gt;

&lt;p&gt;Install Extempore by following the steps &lt;a href=&quot;https://extemporelang.github.io/docs/overview/install/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;installing-vscode&quot;&gt;Installing VSCode&lt;/h4&gt;

&lt;p&gt;Install VSCode (a text editor) by following the steps &lt;a href=&quot;https://extemporelang.github.io/docs/overview/editor-support/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p class=&quot;hl-para&quot;&gt;Note: if you want to use a different text editor, &lt;a href=&quot;https://extemporelang.github.io/docs/overview/editor-support/&quot;&gt;there are other options as
well&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;evaluating-extempore-code&quot;&gt;Evaluating Extempore Code&lt;/h3&gt;

&lt;p&gt;Evaluate the extempore code on VSCode by following the steps below:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Start VSCode&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Go to &lt;strong&gt;File&lt;/strong&gt; -&amp;gt; &lt;strong&gt;Open&lt;/strong&gt;, then open your Extempore directory.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In the VSCode built-in terminal window (&lt;strong&gt;ctrl+`&lt;/strong&gt;) move into the extempore
directory, and start extempore (type &lt;code&gt;./extempore&lt;/code&gt; and hit return).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Open or create an Extempore file (&lt;strong&gt;.xtm&lt;/strong&gt; file)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Connect to the Extempore process: you can do this in VSCode through the
“&lt;strong&gt;command palette&lt;/strong&gt;”, which can be brought up with &lt;strong&gt;ctrl+Shift+P&lt;/strong&gt; on
Windows/Linux or &lt;strong&gt;cmd+Shift+P&lt;/strong&gt; on macOS. &lt;picture&gt;&lt;img alt=&quot;the command palette&quot; src=&quot;/assets/images/xinyu-tutorials/TO3-c691ed117a9766bbbdfb7771d6c624b87ab5e38ea69dc265cb58c02d6b47c9db.png&quot; /&gt;&lt;/picture&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Type &lt;strong&gt;Extempore Connect&lt;/strong&gt; in the opening command palette, the default host
and port arguments will be &lt;code&gt;localhost&lt;/code&gt; and &lt;code&gt;7099&lt;/code&gt; respectively.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p class=&quot;hl-para&quot;&gt;&lt;strong&gt;To evaluate Extempore code&lt;/strong&gt;: move the cursor into the code you want to
evaluate and hit &lt;strong&gt;cmd+enter&lt;/strong&gt; on macOS or &lt;strong&gt;ctrl+enter&lt;/strong&gt; on Windows/Linux.&lt;/p&gt;

&lt;p&gt;What you might see in the terminal window when you evaluate extempore code:&lt;/p&gt;

&lt;picture&gt;&lt;img alt=&quot;Extempore log view&quot; src=&quot;/assets/images/xinyu-tutorials/TO4-c5a2cafc66c5db460147a99b52c9cbfe7a84c0914060501029068f10d0e93a62.png&quot; /&gt;&lt;/picture&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note: you can use &lt;strong&gt;ctrl+c&lt;/strong&gt; in the terminal where extempore is running to kill the extempore process whenever you want.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;tutorial-one&quot;&gt;Tutorial One&lt;/h2&gt;

&lt;h3 id=&quot;predict-and-run&quot;&gt;Predict and Run&lt;/h3&gt;

&lt;p&gt;Work in pairs or small groups, look at the code below and predict what does this code do:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-xtlang&quot;&gt;(bind-val my-pi float 3.1415)
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note: in Extempore, we generally use &lt;strong&gt;kebab-case&lt;/strong&gt; case style &lt;code&gt;my-pi&lt;/code&gt; instead of using &lt;strong&gt;camelCase&lt;/strong&gt; &lt;code&gt;myPi&lt;/code&gt; or &lt;strong&gt;PascalCase&lt;/strong&gt; &lt;code&gt;MyPi&lt;/code&gt;or &lt;strong&gt;snake_case&lt;/strong&gt; &lt;code&gt;my_pi&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Run the code above. Does the compiler print anything in the log? What does the printed message mean?&lt;/p&gt;

&lt;picture&gt;&lt;img alt=&quot;my-pi log view&quot; src=&quot;/assets/images/xinyu-tutorials/my-pi-1cd1e300d8234508cacbbc4b00a256bb0454885084361754135f05ad4dca4e67.png&quot; /&gt;&lt;/picture&gt;

&lt;p&gt;Now, it’s time to produce a sound in Extempore!&lt;/p&gt;

&lt;p&gt;Work in pairs or small groups again, look at the code below and predict/guess what might happen when it runs:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-xtlang&quot;&gt;(bind-func dsp:DSP
  (lambda (in time chan dat)
    (let ((amplitude 0.1)
          (frequency 440.0)
          (two-pi (* 2.0 my-pi)))
      (* amplitude
         (sin (/ (* frequency
                    two-pi
                    (convert time)) SRf))))))

(dsp:set! dsp)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Does it work as predicted?&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Hint:
we set up the xtlang callback:&lt;/p&gt;
  &lt;pre&gt;&lt;code class=&quot;language-xtlang&quot;&gt;(bind-func dsp:DSP
  (lambda (in time chan dat)
    0.0))
&lt;/code&gt;&lt;/pre&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;in:SAMPLE&lt;/strong&gt;
sample from input device&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;time:i64&lt;/strong&gt;
sample number&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;chan:i64&lt;/strong&gt;
audio channel&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;dat:SAMPLE&lt;/strong&gt;
user data&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;&lt;code&gt;&amp;lt;return&amp;gt;&lt;/code&gt;:SAMPLE&lt;/strong&gt;
sample at given channel and time&lt;/li&gt;
    &lt;li&gt;sample value range from -1.0 to 1.0&lt;/li&gt;
  &lt;/ul&gt;

  &lt;p&gt;Note: In Extempore, we represent the mathematical operation &lt;em&gt;2 * PI&lt;/em&gt; as &lt;code&gt;(* 2 PI)&lt;/code&gt;&lt;/p&gt;

  &lt;p&gt;Note: &lt;code&gt;SRf&lt;/code&gt; refers to the current sampling frequency&lt;/p&gt;

  &lt;p&gt;Note: The form of a &lt;code&gt;let&lt;/code&gt; statement is as follows:
&lt;code&gt;(let ((var_name_1 var_value_1) ... (var_n val_n)) (&amp;lt;body&amp;gt;))&lt;/code&gt;&lt;/p&gt;

  &lt;p&gt;Note: &lt;code&gt;convert&lt;/code&gt; allows us to make a &lt;code&gt;SAMPLE&lt;/code&gt; typed value from &lt;code&gt;time&lt;/code&gt;.&lt;/p&gt;

  &lt;p&gt;Note: We only can set &lt;code&gt;dsp&lt;/code&gt; function once, but then redefine it as many times as we want.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;What about white noise in Extempore?&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-xtlang&quot;&gt;(bind-func dsp:DSP
  (lambda (in time chan data)
    (* 0.2 (random))))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Can you explain what happened here?&lt;/p&gt;

&lt;h3 id=&quot;investigate&quot;&gt;Investigate&lt;/h3&gt;

&lt;p&gt;Work in pairs or in small groups, work out the answers to the following questions:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;In what order did you compile (execute) the code in this program?&lt;/li&gt;
  &lt;li&gt;What happened after you evaluated each “chunk” of Extempore code?&lt;/li&gt;
  &lt;li&gt;Can you guess what would happen if you compile the code in a different order?&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note: you can add comments (starting with &lt;strong&gt;;;&lt;/strong&gt;) to the program to make some notes for you to understand the code. The comments are generally ignored by compilers and interpreters.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;modify&quot;&gt;Modify&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Can you play a sound with a frequency of 460.0?&lt;/li&gt;
  &lt;li&gt;Can you make the sound louder by just changing the code? (don’t use your volume buttons!)&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;make&quot;&gt;Make&lt;/h3&gt;

&lt;p&gt;Now, let’s move &lt;code&gt;amplitude&lt;/code&gt;, &lt;code&gt;frequency&lt;/code&gt; and &lt;code&gt;two-pi&lt;/code&gt; outside of lambda to make our &lt;code&gt;dsp&lt;/code&gt; function controllable outside as below:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-xtlang&quot;&gt;(bind-func dsp:DSP
  (let ((amplitude 0.1)
        (frequency 440.0)
        (two-pi (* 2.0 my-pi)))
    (lambda (in time chan dat)
      (* amplitude
         (sin (/ (* frequency
                    two-pi
                    (convert time)) SRf))))))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Can you play a random frequency sound every time when you redefine the &lt;code&gt;dsp&lt;/code&gt; function?&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Note:&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;You could use &lt;code&gt;(random 440.0 700.0)&lt;/code&gt; to randomly generate a value between 440.0 and 700.0&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;Compare to the &lt;code&gt;(random)&lt;/code&gt; in the white noise part above, does the &lt;code&gt;(random)&lt;/code&gt; work differently here? Can you explain how &lt;code&gt;(random)&lt;/code&gt; can be either for “control” (e.g. see the above sine wave part) or for “signal” (e.g. see the white noise part)?&lt;/p&gt;

&lt;h2 id=&quot;tutorial-two&quot;&gt;Tutorial Two&lt;/h2&gt;

&lt;h3 id=&quot;predict&quot;&gt;Predict&lt;/h3&gt;

&lt;p&gt;Work in pairs or small groups, look at the code below and predict what might happen when it runs.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-xtlang&quot;&gt;;; load the instruments file
(sys:load &quot;libs/core/instruments.xtm&quot;)

;; define an fmsynth using the built-in components
(make-instrument fmsynth fmsynth)

;; add the instrument to the DSP output sink closure
(bind-func dsp:DSP
  (lambda (in time chan dat)
    (fmsynth in time chan dat)))

(dsp:set! dsp)

;; play a note on our fmsynth
(play-note (now) fmsynth (random 60 80) 80 *second*)

;; make a loop
(define my-loop
  (lambda (time)
    (play-note time fmsynth (random 60 80) 80 *second*)
    (callback (+ time *second*) 'my-loop (+ time *second*))))

(my-loop (now))
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note: The dsp function takes as input:&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;in: the input audio sample, e.g. from the microphone.&lt;/li&gt;
    &lt;li&gt;time: an i64 representing the time.&lt;/li&gt;
    &lt;li&gt;chan: another i64 which represents the channel index (0 for L, 1 for R, etc.). Extempore can handle any number of channels..&lt;/li&gt;
    &lt;li&gt;data: this is a pointer to a SAMPLE type (which is float by default), and can be used to pass arbitrary data into the dsp function.&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;run&quot;&gt;Run&lt;/h3&gt;

&lt;p&gt;Run the code. Dose it work as predicted?&lt;/p&gt;

&lt;h3 id=&quot;investigate-1&quot;&gt;Investigate&lt;/h3&gt;

&lt;p&gt;Work in pairs or in small groups, work out the answers to the following questions:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;What is the difference between Scheme lambda expression and xtlang bind-func expression? More information click &lt;a href=&quot;https://digego.github.io/extempore/scheme-xtlang-interop.html&quot;&gt;here&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;What is the difference between using &lt;strong&gt;now&lt;/strong&gt; versus using &lt;strong&gt;time&lt;/strong&gt;?  More information click &lt;a href=&quot;https://digego.github.io/extempore/time.html&quot;&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note: you can add comments (starting with &lt;code&gt;;;&lt;/code&gt;) to the program to make some notes for you to understand the code.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;modify-1&quot;&gt;Modify&lt;/h3&gt;

&lt;p&gt;Work in pairs or in small groups, can you modify the above code and make a loop with random notes lengths and random notes frequencies.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-xtlang&quot;&gt;;; hint
;; make a loop with random note length and random note
(define diff-length
  (lambda (time)
    (let ((note-length (random '(0.5 1.0 1.5 2.0)))
          (pitch (random '(60 63 65 68 70 73 75 78 80))))
        (play-note time fmsynth pitch 80 (* *second* note-length))
        (callback (+ time (* note-length *second*)) 'diff-length (+ time (* note-length *second*)))))))

(diff-length (now))
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;make-1&quot;&gt;Make&lt;/h3&gt;

&lt;p&gt;Can you make a chord (or play different notes at the same time) function by using similar ideas to the previous program?&lt;/p&gt;

&lt;h2 id=&quot;going-further&quot;&gt;Going further&lt;/h2&gt;

&lt;p&gt;As well as the &lt;a href=&quot;https://extemporelang.github.io&quot;&gt;Extempore documentation
website&lt;/a&gt;, the best place to start messing
around is with more examples: e.g. the &lt;code&gt;examples/core/fmsynth.xtm&lt;/code&gt; file in your
Extempore folder.&lt;/p&gt;</content><author><name>Ben Swift</name></author><category term="livecoding" /><category term="extempore" /><summary type="html">These tutorials are part of Xinyu Hou’s research project to create a set of PRIMM-style tutorials for learning to make sound/music in Extempore.</summary></entry><entry><title type="html">c/c/c studio: what’s already happening</title><link href="https://benswift.me/blog/2019/09/09/reimagine-fellowship-planning-workshop/" rel="alternate" type="text/html" title="c/c/c studio: what's already happening" /><published>2019-09-09T00:00:00+10:00</published><updated>2019-09-09T00:00:00+10:00</updated><id>https://benswift.me/blog/2019/09/09/reimagine-fellowship-planning-workshop</id><content type="html" xml:base="https://benswift.me/blog/2019/09/09/reimagine-fellowship-planning-workshop/">&lt;p&gt;I’m now a &lt;a href=&quot;/blog/2019/08/30/Im-a-reimagine-fellow/&quot;&gt;Reimagine Fellow&lt;/a&gt; and stuff to do with that program
(and getting the &lt;a href=&quot;/blog/2019/03/20/reimagine-fellow-project-pitch/&quot;&gt;c/c/c studio&lt;/a&gt; up and running) is
starting to happen. As I’ve &lt;a href=&quot;/blog/2019/02/07/reimagining-engineering-cs-at-the-anu/&quot;&gt;done&lt;/a&gt; &lt;a href=&quot;/blog/2019/03/20/reimagine-fellow-project-pitch/&quot;&gt;so
far&lt;/a&gt; I’m planning to continue to work on this project “in the open”, i.e. on this
blog. This means that if you’ve got ideas or want to help out, you can see where
I’m up to (and &lt;a href=&quot;mailto:ben.swift@anu.edu.au&quot;&gt;get in touch&lt;/a&gt;), and it also
minimises the likelihood that I’ll be forced to email around anything called
&lt;code&gt;project-plan-final-ACTUALLY-FINAL-v3.docx&lt;/code&gt; 😉.&lt;/p&gt;

&lt;p&gt;In preparation for a Reimagine Fellows workshop this week (Thursday September
12) I’m sketching out all the existing stuff that’s happening on- (and off-)
campus relating to the c/c/c studio. This is all really rough, but it’s a place
to collect the thoughts &amp;amp; names in my head.&lt;/p&gt;

&lt;h2 id=&quot;people--internal-and-external-to-cecs&quot;&gt;People-–-internal and external to CECS&lt;/h2&gt;

&lt;p&gt;There are lots of folks, in a few different places:&lt;/p&gt;

&lt;h3 id=&quot;internal&quot;&gt;Internal&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://charlesmartin.com.au&quot;&gt;Charles Martin&lt;/a&gt;, RSCS Lecturer and creative
code practitioner&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://cecs.anu.edu.au/people/genevieve-bell&quot;&gt;Genevieve Bell&lt;/a&gt;,
&lt;a href=&quot;https://3ainstitute.cecs.anu.edu.au&quot;&gt;3Ai&lt;/a&gt; Director&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://hingstonbrook.com/60hbrook/hb6000.php&quot;&gt;Tim Brook&lt;/a&gt;, artist &amp;amp;
mathematician, RSCS Adjunct&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;external&quot;&gt;External&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://researchers.anu.edu.au/researchers/hunter-at&quot;&gt;Alec Hunter&lt;/a&gt;, ANU
SoM, previously the convenor of the Open School of Music program&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://researchers.anu.edu.au/researchers/hinchcliffe-gb&quot;&gt;Geoff
Hinchcliffe&lt;/a&gt;, ANU
SoAD, CASS Associate Dean (Education)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Kit Devine, SoAD artist &amp;amp; lecturer&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://tonycurran.net/&quot;&gt;Tony Curran&lt;/a&gt;, artist, SoAD &amp;amp; RSCS lecturer&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.ericaseccombe.com&quot;&gt;Erica Seccombe&lt;/a&gt;, ANU SoAD artist &amp;amp; researcher,
board member of ANAT (the Australian Network for Art &amp;amp; Technology)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.deirdrefeeney.com&quot;&gt;Dierdre Feeney&lt;/a&gt;, artist exploring compositions
of the constructed + projected (moving) image&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.linkedin.com/in/madeleine-parker-928644102/&quot;&gt;Madeleine Parker&lt;/a&gt;,
SCI ART CBR Community Co-ordinator&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.dicksonc.act.edu.au/our_school/principals_welcome&quot;&gt;Craig Edwards&lt;/a&gt;,
Dickson College Principal&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://robogals.org/locations/asia-pacific-apac/canberra/&quot;&gt;Morgan Marshall&lt;/a&gt;,
President of Robogals Canberra&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;systems-and-structures&quot;&gt;Systems and structures&lt;/h2&gt;

&lt;h3 id=&quot;cecs&quot;&gt;CECS&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;the &lt;a href=&quot;https://cs.anu.edu.au/code-creativity-culture/&quot;&gt;code/creativity/culture
group&lt;/a&gt; (my research group)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://cs.anu.edu.au/code-creativity-culture/lens/&quot;&gt;ANU Laptop Ensemble&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;cass&quot;&gt;CASS&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;ANU Open School of Music (outreach/extension stuff with pre-teritary kids)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;School of Art &amp;amp; Design&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;outside-anu&quot;&gt;Outside ANU&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Australian Network for Art &amp;amp; Technology&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;processes&quot;&gt;Processes&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;I’m not quite sure what the difference is between a structure &amp;amp; a process in
this contenxt&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&quot;data-and-information&quot;&gt;Data and information&lt;/h2&gt;

&lt;p&gt;TODO&lt;/p&gt;</content><author><name>Ben Swift</name></author><category term="reimagine" /><summary type="html">I’m now a Reimagine Fellow and stuff to do with that program (and getting the c/c/c studio up and running) is starting to happen. As I’ve done so far I’m planning to continue to work on this project “in the open”, i.e. on this blog. This means that if you’ve got ideas or want to help out, you can see where I’m up to (and get in touch), and it also minimises the likelihood that I’ll be forced to email around anything called project-plan-final-ACTUALLY-FINAL-v3.docx 😉.</summary></entry><entry><title type="html">I’m a Reimagine Fellow</title><link href="https://benswift.me/blog/2019/08/30/Im-a-reimagine-fellow/" rel="alternate" type="text/html" title="I'm a Reimagine Fellow" /><published>2019-08-30T00:00:00+10:00</published><updated>2019-08-30T00:00:00+10:00</updated><id>https://benswift.me/blog/2019/08/30/Im-a-reimagine-fellow</id><content type="html" xml:base="https://benswift.me/blog/2019/08/30/Im-a-reimagine-fellow/">&lt;p&gt;If you’ve been following the CECS newsletter, you’ll know that the inaugural
&lt;a href=&quot;https://cecs.anu.edu.au/reimagine/reimagine-fellows&quot;&gt;Reimagine Fellows&lt;/a&gt; have been
announced, and I’m one of them 🙌🎉🥳. It’s very exciting, and it means the
&lt;a href=&quot;/blog/2019/03/20/reimagine-fellow-project-pitch/&quot;&gt;c/c/c studio&lt;/a&gt; is going to be a real
thing in 2020 (and beyond). It’s also a relief to be able to tell people, since
I’ve had to keep the good news under my hat for the last couple of months.&lt;/p&gt;

&lt;p&gt;There are &lt;strong&gt;lots&lt;/strong&gt; of details still to figure out, and I’m going to be
talking to lots of folks over the next little while about how best to make this
grand vision happen (if you’d like to chat, &lt;a href=&quot;mailto:ben.swift@anu.edu.au&quot;&gt;get in
touch&lt;/a&gt;). But to give you a flavour, here’s a snazzy
video the clever folks at CECS made:&lt;/p&gt;

&lt;div style=&quot;width:100%; margin: 0px auto;&quot;&gt;
  &lt;div style=&quot;position: relative; padding-bottom: 62.5%; height: 0px;&quot;&gt;
	&lt;iframe style=&quot;position: absolute; top: 0px; left: 0px; width: 100%; height: 100%;&quot; src=&quot;https://www.youtube.com/embed/Sv4Y-UPqML8&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;
	&lt;/iframe&gt;
  &lt;/div&gt;
&lt;/div&gt;</content><author><name>Ben Swift</name></author><category term="reimagine" /><summary type="html">If you’ve been following the CECS newsletter, you’ll know that the inaugural Reimagine Fellows have been announced, and I’m one of them 🙌🎉🥳. It’s very exciting, and it means the c/c/c studio is going to be a real thing in 2020 (and beyond). It’s also a relief to be able to tell people, since I’ve had to keep the good news under my hat for the last couple of months.</summary></entry><entry><title type="html">Making the most of meetings with research students</title><link href="https://benswift.me/blog/2019/08/06/making-the-most-of-meetings-with-research-students/" rel="alternate" type="text/html" title="Making the most of meetings with research students" /><published>2019-08-06T00:00:00+10:00</published><updated>2019-08-06T00:00:00+10:00</updated><id>https://benswift.me/blog/2019/08/06/making-the-most-of-meetings-with-research-students</id><content type="html" xml:base="https://benswift.me/blog/2019/08/06/making-the-most-of-meetings-with-research-students/">&lt;div class=&quot;hl-para&quot;&gt;

  &lt;p&gt;&lt;strong&gt;tl;dr&lt;/strong&gt; here are my standard questions for one-to-one meetings with research
students&lt;/p&gt;

  &lt;ol&gt;
    &lt;li&gt;what’s your research question in one sentence?&lt;/li&gt;
    &lt;li&gt;can you show me the &lt;em&gt;thing&lt;/em&gt; that you’re currently working on?&lt;/li&gt;
    &lt;li&gt;are there any upcoming dates I should be aware of?&lt;/li&gt;
    &lt;li&gt;what’s your next step? What’s getting in the way?&lt;/li&gt;
  &lt;/ol&gt;

&lt;/div&gt;

&lt;p&gt;Being a good research supervisor takes time, but it’s really very rewarding.
From PhD &amp;amp; MPhil students through to undergraduate research project
students&lt;sup id=&quot;fnref:project-students&quot;&gt;&lt;a href=&quot;#fn:project-students&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;, there are lots of meetings to be had. And everyone
knows that meetings suck, or at least that &lt;em&gt;bad&lt;/em&gt; meetings suck.&lt;/p&gt;

&lt;p&gt;So, here are some thoughts in my brain for conducting effective one-on-one
meetings with research students. As research student numbers grow, I wanna have
a good “template” for each meeting, and then vary as necessary.&lt;/p&gt;

&lt;h2 id=&quot;default-meeting-agenda&quot;&gt;(Default) meeting agenda&lt;/h2&gt;

&lt;h3 id=&quot;whats-your-research-question-in-one-sentence&quot;&gt;What’s your research question in one sentence?&lt;/h3&gt;

&lt;p&gt;Look, I still find this hard sometimes—but it’s an important skill to be able
to clearly articulate what your research question is in any particular project.
Since it’s only once sentence, it doesn’t take long, and having this weekly
practice at articulating it (with feedback) means that when it comes time to
write things up, much of the hard thinking in articulating things is already
done.&lt;/p&gt;

&lt;h3 id=&quot;can-you-show-me-the-thing-that-youre-currently-working-on&quot;&gt;Can you show me the &lt;em&gt;thing&lt;/em&gt; that you’re currently working on?&lt;/h3&gt;

&lt;p&gt;In every meeting, I want my student to show me a thing they’re working on. It
might be a piece of software, it might be a piece of writing (e.g. a paper draft
or thesis chapter), it might be a piece of hardware/music/art. &lt;em&gt;I wanna see
something that you’re working on&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;I’m a livecoder, so I love live demos, and being able to give a short demo of
one’s work-in-progress is a good skill to develop (you never know when you’ll
get an impromptu chance to show off what you’re working on).&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://pgbovine.net/advice-for-first-year-PhD-students.htm&quot;&gt;Philip Guo also emphasises how helpful it is to have a thing to talk about in a
research supervisory
meeting&lt;/a&gt; (see the
“Intermission” video in the linked blog post).&lt;/p&gt;

&lt;h3 id=&quot;are-there-any-upcoming-dates-i-should-be-aware-of&quot;&gt;Are there any upcoming dates I should be aware of?&lt;/h3&gt;

&lt;p&gt;It’s hard to remember all the admin dates for different courses/programs/paper
deadlines, and I can’t remember all that stuff for &lt;em&gt;every&lt;/em&gt; student. Instead,
tell me if there are any dates coming up which I/we should be aware of.&lt;/p&gt;

&lt;h3 id=&quot;whats-your-next-step-whats-getting-in-the-way&quot;&gt;What’s your next step? What’s getting in the way?&lt;/h3&gt;

&lt;p&gt;Students don’t get &lt;em&gt;that&lt;/em&gt; much face-to-face time with their supervisor—even
with an attentive one. So it’s important to make sure that after each meeting
there’s a clear next step, and in particular that if there are any “blockers”
we can discuss them there and then, and brainstorm strategies to deal with them.&lt;/p&gt;

&lt;h2 id=&quot;this-is-a-work-in-progress&quot;&gt;This is a work-in-progress&lt;/h2&gt;

&lt;p&gt;There are
&lt;a href=&quot;https://hbr.org/2015/03/how-to-design-an-agenda-for-an-effective-meeting&quot;&gt;lots&lt;/a&gt;
&lt;a href=&quot;https://blog.asana.com/2017/12/run-effective-meetings-agenda-tips/&quot;&gt;of&lt;/a&gt;
&lt;a href=&quot;https://getlighthouse.com/blog/one-on-one-meeting-questions-great-managers-ask/&quot;&gt;general&lt;/a&gt;
&lt;a href=&quot;https://www.dummies.com/careers/project-management/ten-tips-for-running-an-effective-meeting/&quot;&gt;tips&lt;/a&gt;
on how to run an effective meeting, and while there’s some useful stuff there
I’m keen to develop a strategy which is tailored to the &lt;em&gt;supervisor&lt;/em&gt;-_research
student_ scenario.&lt;/p&gt;

&lt;p&gt;The other things which the above questions don’t capture is the need to build
rapport; this includes stuff like finding out how students are coping with life
more generally, and pastoral care is an important part of being a supervisor as
well.&lt;/p&gt;

&lt;p&gt;Obviously sometimes there are specific things to discuss relevant to a
particular student/project, and in those situations I’ll tweak the agenda as
necessary. This “template” is hopefully simple and helpful, though, and I’ll let
you know how it goes 😊 If you have any comments/suggestions, then I’d love to
hear them; &lt;a href=&quot;https://twitter.com/benswift&quot;&gt;let me know on twitter&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:project-students&quot;&gt;

      &lt;p&gt;You’ve probably heard that CS enrolments are through the roof—it’s a great
(if a bit hectic) time to be a CS academic (even a multidisciplinary one
😉). The enrolment thing isn’t just a first-year problem, either—the
pipeline is full all the way through to the “capstone” research projects
that many students take at the end of their degree. &lt;a href=&quot;#fnref:project-students&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Ben Swift</name></author><category term="teaching" /><category term="research" /><summary type="html"></summary></entry><entry><title type="html">Livecoding gig this Friday 5:30pm @ ANU Drill Hall Gallery</title><link href="https://benswift.me/blog/2019/07/29/livecoding-gig-this-friday-5-30pm-anu-drill-hall-gallery/" rel="alternate" type="text/html" title="Livecoding gig this Friday 5:30pm @ ANU Drill Hall Gallery" /><published>2019-07-29T00:00:00+10:00</published><updated>2019-07-29T00:00:00+10:00</updated><id>https://benswift.me/blog/2019/07/29/livecoding-gig-this-friday-5-30pm-anu-drill-hall-gallery</id><content type="html" xml:base="https://benswift.me/blog/2019/07/29/livecoding-gig-this-friday-5-30pm-anu-drill-hall-gallery/">&lt;p&gt;For those who visit my blog to hear my livecoding gigs, there’s one this Friday.
If you wanna see me perform with &lt;a href=&quot;http://charlesmartin.com.au/&quot;&gt;Charles Martin&lt;/a&gt;
(on percussion &amp;amp; electronics) and &lt;a href=&quot;https://kieranbrowne.com&quot;&gt;Kieran Browne&lt;/a&gt; on
livecoded visuals (live GLSL shader hacking). We’re playing 5:30pm–7:30pm @
&lt;a href=&quot;https://dhg.anu.edu.au/&quot;&gt;Drill Hall Gallery&lt;/a&gt; as part of the &lt;a href=&quot;https://dhg.anu.edu.au/events/ildiko-kovacs-the-dna-of-colour/&quot;&gt;&lt;em&gt;Ildiko Kovacs:
The DNA of colour&lt;/em&gt;
exhibition&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Also on the bill are current &amp;amp; former members of the &lt;a href=&quot;https://cs.anu.edu.au/code-creativity-culture/lens/&quot;&gt;ANU Laptop
Ensemble&lt;/a&gt;, including Ushini
Attanayake and Brent Schuetze.&lt;/p&gt;

&lt;p&gt;Free entry! Light refreshments provided, drinks from $5. You really don’t have
any reason not to come along 😉&lt;/p&gt;

&lt;p&gt;More details on the facebook event:
&lt;a href=&quot;https://www.facebook.com/events/359350878094918/&quot;&gt;https://www.facebook.com/events/359350878094918/&lt;/a&gt;&lt;/p&gt;</content><author><name>Ben Swift</name></author><category term="livecoding" /><category term="gigs" /><summary type="html">For those who visit my blog to hear my livecoding gigs, there’s one this Friday. If you wanna see me perform with Charles Martin (on percussion &amp;amp; electronics) and Kieran Browne on livecoded visuals (live GLSL shader hacking). We’re playing 5:30pm–7:30pm @ Drill Hall Gallery as part of the Ildiko Kovacs: The DNA of colour exhibition.</summary></entry><entry><title type="html">Livecoding article on the ABC</title><link href="https://benswift.me/blog/2019/07/24/livecoding-article-on-the-abc/" rel="alternate" type="text/html" title="Livecoding article on the ABC" /><published>2019-07-24T00:00:00+10:00</published><updated>2019-07-24T00:00:00+10:00</updated><id>https://benswift.me/blog/2019/07/24/livecoding-article-on-the-abc</id><content type="html" xml:base="https://benswift.me/blog/2019/07/24/livecoding-article-on-the-abc/">&lt;p&gt;In case you missed it, I was interviewed for &lt;a href=&quot;https://www.abc.net.au/news/2019-07-21/live-coding-australia-music-computer-code/11301114&quot;&gt;an article on the ABC News
website&lt;/a&gt;
which came out last weekend entitled &lt;em&gt;The Australians making music with computer
code&lt;/em&gt;. A nice look at some of the players in the Australian livecoding scene.&lt;/p&gt;</content><author><name>Ben Swift</name></author><category term="livecoding" /><category term="media" /><summary type="html">In case you missed it, I was interviewed for an article on the ABC News website which came out last weekend entitled The Australians making music with computer code. A nice look at some of the players in the Australian livecoding scene.</summary></entry><entry><title type="html">In-place XML tree mutation for Jekyll productivity</title><link href="https://benswift.me/blog/2019/07/17/in-place-xml-tree-mutation-for-jekyll-productivity/" rel="alternate" type="text/html" title="In-place XML tree mutation for Jekyll productivity" /><published>2019-07-17T00:00:00+10:00</published><updated>2019-07-17T00:00:00+10:00</updated><id>https://benswift.me/blog/2019/07/17/in-place-xml-tree-mutation-for-jekyll-productivity</id><content type="html" xml:base="https://benswift.me/blog/2019/07/17/in-place-xml-tree-mutation-for-jekyll-productivity/">&lt;p&gt;I wrote a &lt;a href=&quot;/blog/2018/09/28/another-reveal.js-plugin-for-jekyll/&quot;&gt;reveal.js&lt;/a&gt; plugin for Jekyll
so that I can make nice slides (especially for my
&lt;a href=&quot;https://cs.anu.edu.au/courses/comp1720/lectures/&quot;&gt;ANU&lt;/a&gt;
&lt;a href=&quot;https://cs.anu.edu.au/courses/comp2300/lectures/&quot;&gt;courses&lt;/a&gt;). Recently, though,
I’ve been touching up the COMP1720 slides for 2019 and it’s getting &lt;em&gt;really
slow&lt;/em&gt; to build the website.&lt;/p&gt;

&lt;p&gt;I turned to Jekyll’s built-in profiling command to see where the problem is.
Here’s the output of &lt;code&gt;jekyll build --profile&lt;/code&gt; on this website, which (currently)
builds in &lt;strong&gt;7.2 seconds&lt;/strong&gt; on my machine.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Filename&lt;/th&gt;
      &lt;th&gt;Count&lt;/th&gt;
      &lt;th&gt;Bytes&lt;/th&gt;
      &lt;th&gt;Time&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;_layouts/reveal.html&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;104.60K&lt;/td&gt;
      &lt;td&gt;4.102&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;_layouts/default.html&lt;/td&gt;
      &lt;td&gt;81&lt;/td&gt;
      &lt;td&gt;729.15K&lt;/td&gt;
      &lt;td&gt;0.809&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;_includes/head.html&lt;/td&gt;
      &lt;td&gt;90&lt;/td&gt;
      &lt;td&gt;266.90K&lt;/td&gt;
      &lt;td&gt;0.702&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;research.md&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;16.40K&lt;/td&gt;
      &lt;td&gt;0.196&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;_includes/hljs.html&lt;/td&gt;
      &lt;td&gt;90&lt;/td&gt;
      &lt;td&gt;29.44K&lt;/td&gt;
      &lt;td&gt;0.192&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;_includes/slides/background-image.html&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;31.94K&lt;/td&gt;
      &lt;td&gt;0.154&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;_layouts/paginated.html&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;70.29K&lt;/td&gt;
      &lt;td&gt;0.078&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;_talks/u3a-world-since-google.md&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;14.49K&lt;/td&gt;
      &lt;td&gt;0.058&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;_includes/header.html&lt;/td&gt;
      &lt;td&gt;81&lt;/td&gt;
      &lt;td&gt;85.88K&lt;/td&gt;
      &lt;td&gt;0.042&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;_talks/ltc-stem-camp.md&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;13.38K&lt;/td&gt;
      &lt;td&gt;0.040&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;feed.xml&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;105.55K&lt;/td&gt;
      &lt;td&gt;0.038&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;…more inconsequential stuff follows…&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Clearly, the &lt;code&gt;reveal.html&lt;/code&gt; layout is the problem, taking 4.1s (more than half
the total build time). I suspect that this is because my &lt;a href=&quot;/blog/2018/09/28/another-reveal.js-plugin-for-jekyll/&quot;&gt;reveal
plugin&lt;/a&gt; does a bunch of
copying of (Nokogiri) XML nodes, because I wasn’t worrying about performance
when I wrote it.&lt;/p&gt;

&lt;h3 id=&quot;re-parent-all-the-nodes&quot;&gt;Re-parent all the nodes!&lt;/h3&gt;

&lt;p&gt;Looking at the &lt;a href=&quot;https://nokogiri.org/rdoc/Nokogiri/XML/Node&quot;&gt;Nokogiri API&lt;/a&gt; and
the &lt;code&gt;revealify.rb&lt;/code&gt; plugin code, there are a bunch of places where instead of
duplicating &amp;amp; copying nodes, I can just re-parent them into the right places.
I’m a big immutability fan usually, which is why I built the plugin based on
copying originally, but with a bit of careful re-parenting the &lt;code&gt;revealify.rb&lt;/code&gt;
plugin now looks like
&lt;a href=&quot;https://github.com/benswift/benswift.github.io/blob/source/_plugins/revealify.rb&quot;&gt;this&lt;/a&gt;
(see the &lt;a href=&quot;/blog/2018/09/28/another-reveal.js-plugin-for-jekyll/&quot;&gt;linked post above&lt;/a&gt; to see what it
looked like before).&lt;/p&gt;

&lt;p&gt;And the result? Total build time is down to &lt;strong&gt;2.8 seconds&lt;/strong&gt;. Admittedly that was
because it was &lt;em&gt;really inefficient&lt;/em&gt; before, but I’ll take a 2.5x speedup anyday
😊. Here’s the relevant profiler output with the updated plugin:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Filename&lt;/th&gt;
      &lt;th&gt;Count&lt;/th&gt;
      &lt;th&gt;Bytes&lt;/th&gt;
      &lt;th&gt;Time&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;_layouts/default.html&lt;/td&gt;
      &lt;td&gt;82&lt;/td&gt;
      &lt;td&gt;741.77K&lt;/td&gt;
      &lt;td&gt;0.873&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;_includes/head.html&lt;/td&gt;
      &lt;td&gt;91&lt;/td&gt;
      &lt;td&gt;269.82K&lt;/td&gt;
      &lt;td&gt;0.780&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;research.md&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;16.40K&lt;/td&gt;
      &lt;td&gt;0.198&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;_layouts/reveal.html&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;105.65K&lt;/td&gt;
      &lt;td&gt;0.182&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;_includes/hljs.html&lt;/td&gt;
      &lt;td&gt;91&lt;/td&gt;
      &lt;td&gt;29.77K&lt;/td&gt;
      &lt;td&gt;0.172&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;_includes/slides/background-image.html&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;31.94K&lt;/td&gt;
      &lt;td&gt;0.151&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;_layouts/paginated.html&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;70.55K&lt;/td&gt;
      &lt;td&gt;0.101&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;_talks/u3a-world-since-google.md&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;14.50K&lt;/td&gt;
      &lt;td&gt;0.058&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;_includes/header.html&lt;/td&gt;
      &lt;td&gt;82&lt;/td&gt;
      &lt;td&gt;86.94K&lt;/td&gt;
      &lt;td&gt;0.045&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;_talks/ltc-stem-camp.md&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;13.39K&lt;/td&gt;
      &lt;td&gt;0.041&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;feed.xml&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;112.62K&lt;/td&gt;
      &lt;td&gt;0.029&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;…more inconsequential stuff follows…&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Wow, the &lt;code&gt;reveal.html&lt;/code&gt; layout has gone from 4.1s to 0.2s, a &lt;strong&gt;20x speedup&lt;/strong&gt;!&lt;/p&gt;

&lt;p&gt;So I guess the moral of the story is that profiling is important, and that
avoiding copies and writing filthy mutable code is helpful as long as you’re
careful.&lt;/p&gt;

&lt;p&gt;Now that I’ve done procrastinating with this stuff, I can get back to writing my
slides for the upcoming semester.&lt;/p&gt;</content><author><name>Ben Swift</name></author><category term="web" /><summary type="html">I wrote a reveal.js plugin for Jekyll so that I can make nice slides (especially for my ANU courses). Recently, though, I’ve been touching up the COMP1720 slides for 2019 and it’s getting really slow to build the website.</summary></entry></feed>