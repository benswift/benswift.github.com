["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$reimagine-logo.dom-helpers","~:imports",null,"~:requires",["^ ","~$string","~$clojure.string","^:","^:","~$dom","~$goog.dom","^<","^<","~$classlist","~$goog.dom.classlist","^>","^>"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$has-class?",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/ben/Documents/research/benswift.me/_cljs/reimagine_logo/src/reimagine_logo/dom_helpers.cljs","~:line",115,"~:column",7,"~:end-line",115,"~:end-column",17,"~:arglists",["~#list",["~$quote",["^K",[["~$e","~$class-name"]]]]],"~:doc","does element have the given class?"],"^5","~$reimagine-logo.dom-helpers/has-class?","^E","/Users/ben/Documents/research/benswift.me/_cljs/reimagine_logo/src/reimagine_logo/dom_helpers.cljs","^I",17,"~:method-params",["^K",[["~$e","^M"]]],"~:protocol-impl",null,"~:arglists-meta",["^K",[null,null]],"^G",1,"~:variadic?",false,"^F",115,"~:ret-tag","~$any","^H",115,"~:max-fixed-arity",2,"~:fn-var",true,"^J",["^K",["^L",["^K",[["~$e","^M"]]]]],"^N","does element have the given class?"],"~$html",["^ ","^C",null,"^D",["^ ","^E","/Users/ben/Documents/research/benswift.me/_cljs/reimagine_logo/src/reimagine_logo/dom_helpers.cljs","^F",76,"^G",7,"^H",76,"^I",11,"^J",["^K",["^L",["^K",[["~$s"]]]]],"^N","Create a dom element from an html string."],"^5","~$reimagine-logo.dom-helpers/html","^E","/Users/ben/Documents/research/benswift.me/_cljs/reimagine_logo/src/reimagine_logo/dom_helpers.cljs","^I",11,"^P",["^K",[["~$s"]]],"^Q",null,"^R",["^K",[null,null]],"^G",1,"^S",false,"^F",76,"^T","^U","^H",76,"^V",1,"^W",true,"^J",["^K",["^L",["^K",[["~$s"]]]]],"^N","Create a dom element from an html string."],"~$remove-class",["^ ","^C",null,"^D",["^ ","^E","/Users/ben/Documents/research/benswift.me/_cljs/reimagine_logo/src/reimagine_logo/dom_helpers.cljs","^F",110,"^G",7,"^H",110,"^I",19,"^J",["^K",["^L",["^K",[["~$e","^M"]]]]],"^N","remove class from element."],"^5","~$reimagine-logo.dom-helpers/remove-class","^E","/Users/ben/Documents/research/benswift.me/_cljs/reimagine_logo/src/reimagine_logo/dom_helpers.cljs","^I",19,"^P",["^K",[["~$e","^M"]]],"^Q",null,"^R",["^K",[null,null]],"^G",1,"^S",false,"^F",110,"^T","^U","^H",110,"^V",2,"^W",true,"^J",["^K",["^L",["^K",[["~$e","^M"]]]]],"^N","remove class from element."],"~$normalize-args",["^ ","^C",null,"^D",["^ ","^E","/Users/ben/Documents/research/benswift.me/_cljs/reimagine_logo/src/reimagine_logo/dom_helpers.cljs","^F",39,"^G",7,"^H",39,"^I",21,"^J",["^K",["^L",["^K",[["~$tag","~$args"]]]]]],"^5","~$reimagine-logo.dom-helpers/normalize-args","^E","/Users/ben/Documents/research/benswift.me/_cljs/reimagine_logo/src/reimagine_logo/dom_helpers.cljs","^I",21,"^P",["^K",[["^11","^12"]]],"^Q",null,"^R",["^K",[null,null]],"^G",1,"^S",false,"^F",39,"^T","~$cljs.core/IVector","^H",39,"^V",2,"^W",true,"^J",["^K",["^L",["^K",[["^11","^12"]]]]]],"~$element",["^ ","^C",null,"^D",["^ ","^E","/Users/ben/Documents/research/benswift.me/_cljs/reimagine_logo/src/reimagine_logo/dom_helpers.cljs","^F",50,"^G",7,"^H",50,"^I",14,"^J",["^K",["^L",["^K",[["^11","~$&","^12"]]]]],"^N","Create a dom element using a keyword for the element name and a map\n  for the attributes. Append all children to parent. If the first\n  child is a string then the string will be set as the text content of\n  the parent and all remaining children will be appended.","~:top-fn",["^ ","^S",true,"~:fixed-arity",1,"^V",1,"^P",[["^K",["^11","^12"]]],"^J",["^K",[["^11","~$&","^12"]]],"^R",["^K",[null]]]],"^5","~$reimagine-logo.dom-helpers/element","^E","/Users/ben/Documents/research/benswift.me/_cljs/reimagine_logo/src/reimagine_logo/dom_helpers.cljs","^I",14,"^16",["^ ","^S",true,"^17",1,"^V",1,"^P",[["^K",["^11","^12"]]],"^J",["^K",[["^11","~$&","^12"]]],"^R",["^K",[null]]],"^P",[["^K",["^11","^12"]]],"^Q",null,"^17",1,"^R",["^K",[null]],"^G",1,"^S",true,"~:methods",[["^ ","^17",1,"^S",true,"~:tag","^U"]],"^F",50,"^T","^U","^H",50,"^V",1,"^W",true,"^J",["^K",[["^11","~$&","^12"]]],"^N","Create a dom element using a keyword for the element name and a map\n  for the attributes. Append all children to parent. If the first\n  child is a string then the string will be set as the text content of\n  the parent and all remaining children will be appended."],"~$insert-at",["^ ","^C",null,"^D",["^ ","^E","/Users/ben/Documents/research/benswift.me/_cljs/reimagine_logo/src/reimagine_logo/dom_helpers.cljs","^F",98,"^G",7,"^H",98,"^I",16,"^J",["^K",["^L",["^K",[["~$parent","~$child","~$index"]]]]],"^N","Insert a child element at a specific location."],"^5","~$reimagine-logo.dom-helpers/insert-at","^E","/Users/ben/Documents/research/benswift.me/_cljs/reimagine_logo/src/reimagine_logo/dom_helpers.cljs","^I",16,"^P",["^K",[["^1<","^1=","^1>"]]],"^Q",null,"^R",["^K",[null,null]],"^G",1,"^S",false,"^F",98,"^T","^U","^H",98,"^V",3,"^W",true,"^J",["^K",["^L",["^K",[["^1<","^1=","^1>"]]]]],"^N","Insert a child element at a specific location."],"~$get-text",["^ ","^C",null,"^D",["^ ","^E","/Users/ben/Documents/research/benswift.me/_cljs/reimagine_logo/src/reimagine_logo/dom_helpers.cljs","^F",26,"^G",7,"^H",26,"^I",15,"^J",["^K",["^L",["^K",[["~$e"]]]]],"^N","get the text content of element."],"^5","~$reimagine-logo.dom-helpers/get-text","^E","/Users/ben/Documents/research/benswift.me/_cljs/reimagine_logo/src/reimagine_logo/dom_helpers.cljs","^I",15,"^P",["^K",[["~$e"]]],"^Q",null,"^R",["^K",[null,null]],"^G",1,"^S",false,"^F",26,"^T","^U","^H",26,"^V",1,"^W",true,"^J",["^K",["^L",["^K",[["~$e"]]]]],"^N","get the text content of element."],"~$append",["^ ","^C",null,"^D",["^ ","^E","/Users/ben/Documents/research/benswift.me/_cljs/reimagine_logo/src/reimagine_logo/dom_helpers.cljs","^F",19,"^G",7,"^H",19,"^I",13,"^J",["^K",["^L",["^K",[["^1<","~$&","~$children"]]]]],"^N","Append all children to parent.","^16",["^ ","^S",true,"^17",1,"^V",1,"^P",[["^K",["^1<","^1C"]]],"^J",["^K",[["^1<","~$&","^1C"]]],"^R",["^K",[null]]]],"^5","~$reimagine-logo.dom-helpers/append","^E","/Users/ben/Documents/research/benswift.me/_cljs/reimagine_logo/src/reimagine_logo/dom_helpers.cljs","^I",13,"^16",["^ ","^S",true,"^17",1,"^V",1,"^P",[["^K",["^1<","^1C"]]],"^J",["^K",[["^1<","~$&","^1C"]]],"^R",["^K",[null]]],"^P",[["^K",["^1<","^1C"]]],"^Q",null,"^17",1,"^R",["^K",[null]],"^G",1,"^S",true,"^19",[["^ ","^17",1,"^S",true]],"^F",19,"^T","^U","^H",19,"^V",1,"^W",true,"^J",["^K",[["^1<","~$&","^1C"]]],"^N","Append all children to parent."],"~$swap-class",["^ ","^C",null,"^D",["^ ","^E","/Users/ben/Documents/research/benswift.me/_cljs/reimagine_logo/src/reimagine_logo/dom_helpers.cljs","^F",120,"^G",7,"^H",120,"^I",17,"^J",["^K",["^L",["^K",[["~$e","~$from-class","~$to-class"]]]]],"^N","swap class without touching other classes."],"^5","~$reimagine-logo.dom-helpers/swap-class","^E","/Users/ben/Documents/research/benswift.me/_cljs/reimagine_logo/src/reimagine_logo/dom_helpers.cljs","^I",17,"^P",["^K",[["~$e","^1F","^1G"]]],"^Q",null,"^R",["^K",[null,null]],"^G",1,"^S",false,"^F",120,"^T","^U","^H",120,"^V",3,"^W",true,"^J",["^K",["^L",["^K",[["~$e","^1F","^1G"]]]]],"^N","swap class without touching other classes."],"~$set-text",["^ ","^C",null,"^D",["^ ","^E","/Users/ben/Documents/research/benswift.me/_cljs/reimagine_logo/src/reimagine_logo/dom_helpers.cljs","^F",31,"^G",7,"^H",31,"^I",15,"^J",["^K",["^L",["^K",[["~$e","~$s"]]]]],"^N","Set the text content for the passed element returning the\n  element. If a keyword is passed in the place of e, the element with\n  that id will be used and returned."],"^5","~$reimagine-logo.dom-helpers/set-text","^E","/Users/ben/Documents/research/benswift.me/_cljs/reimagine_logo/src/reimagine_logo/dom_helpers.cljs","^I",15,"^P",["^K",[["~$e","~$s"]]],"^Q",null,"^R",["^K",[null,null]],"^G",1,"^S",false,"^F",31,"^T",["^4",[null,"^U"]],"^H",31,"^V",2,"^W",true,"^J",["^K",["^L",["^K",[["~$e","~$s"]]]]],"^N","Set the text content for the passed element returning the\n  element. If a keyword is passed in the place of e, the element with\n  that id will be used and returned."],"~$build",["^ ","^C",null,"^D",["^ ","^E","/Users/ben/Documents/research/benswift.me/_cljs/reimagine_logo/src/reimagine_logo/dom_helpers.cljs","^F",86,"^G",7,"^H",86,"^I",12,"^J",["^K",["^L",["^K",[["~$x"]]]]],"^N","Build up a dom element from nested vectors."],"^5","~$reimagine-logo.dom-helpers/build","^E","/Users/ben/Documents/research/benswift.me/_cljs/reimagine_logo/src/reimagine_logo/dom_helpers.cljs","^I",12,"^P",["^K",[["~$x"]]],"^Q",null,"^R",["^K",[null,null]],"^G",1,"^S",false,"^F",86,"^T",["^4",[null,"^U"]],"^H",86,"^V",1,"^W",true,"^J",["^K",["^L",["^K",[["~$x"]]]]],"^N","Build up a dom element from nested vectors."],"~$get-element",["^ ","^C",null,"^D",["^ ","^E","/Users/ben/Documents/research/benswift.me/_cljs/reimagine_logo/src/reimagine_logo/dom_helpers.cljs","^F",14,"^G",7,"^H",14,"^I",18,"^J",["^K",["^L",["^K",[["~$id"]]]]],"^N","Return the element with the passed id."],"^5","~$reimagine-logo.dom-helpers/get-element","^E","/Users/ben/Documents/research/benswift.me/_cljs/reimagine_logo/src/reimagine_logo/dom_helpers.cljs","^I",18,"^P",["^K",[["^1N"]]],"^Q",null,"^R",["^K",[null,null]],"^G",1,"^S",false,"^F",14,"^T","^U","^H",14,"^V",1,"^W",true,"^J",["^K",["^L",["^K",[["^1N"]]]]],"^N","Return the element with the passed id."],"~$add-class",["^ ","^C",null,"^D",["^ ","^E","/Users/ben/Documents/research/benswift.me/_cljs/reimagine_logo/src/reimagine_logo/dom_helpers.cljs","^F",105,"^G",7,"^H",105,"^I",16,"^J",["^K",["^L",["^K",[["~$e","^M"]]]]],"^N","add class to element."],"^5","~$reimagine-logo.dom-helpers/add-class","^E","/Users/ben/Documents/research/benswift.me/_cljs/reimagine_logo/src/reimagine_logo/dom_helpers.cljs","^I",16,"^P",["^K",[["~$e","^M"]]],"^Q",null,"^R",["^K",[null,null]],"^G",1,"^S",false,"^F",105,"^T","^U","^H",105,"^V",2,"^W",true,"^J",["^K",["^L",["^K",[["~$e","^M"]]]]],"^N","add class to element."],"~$remove-children",["^ ","^C",null,"^D",["^ ","^E","/Users/ben/Documents/research/benswift.me/_cljs/reimagine_logo/src/reimagine_logo/dom_helpers.cljs","^F",70,"^G",7,"^H",70,"^I",22,"^J",["^K",["^L",["^K",[["^1N"]]]]],"^N","Remove all children from the element with the passed id."],"^5","~$reimagine-logo.dom-helpers/remove-children","^E","/Users/ben/Documents/research/benswift.me/_cljs/reimagine_logo/src/reimagine_logo/dom_helpers.cljs","^I",22,"^P",["^K",[["^1N"]]],"^Q",null,"^R",["^K",[null,null]],"^G",1,"^S",false,"^F",70,"^T","^U","^H",70,"^V",1,"^W",true,"^J",["^K",["^L",["^K",[["^1N"]]]]],"^N","Remove all children from the element with the passed id."],"~$element-arg?",["^ ","^C",null,"^D",["^ ","^E","/Users/ben/Documents/research/benswift.me/_cljs/reimagine_logo/src/reimagine_logo/dom_helpers.cljs","^F",81,"^G",8,"^H",81,"^I",20,"~:private",true,"^J",["^K",["^L",["^K",[["~$x"]]]]]],"^1U",true,"^5","~$reimagine-logo.dom-helpers/element-arg?","^E","/Users/ben/Documents/research/benswift.me/_cljs/reimagine_logo/src/reimagine_logo/dom_helpers.cljs","^I",20,"^P",["^K",[["~$x"]]],"^Q",null,"^R",["^K",[null,null]],"^G",1,"^S",false,"^F",81,"^T","~$boolean","^H",81,"^V",1,"^W",true,"^J",["^K",["^L",["^K",[["~$x"]]]]]],"~$toggle-class",["^ ","^C",null,"^D",["^ ","^E","/Users/ben/Documents/research/benswift.me/_cljs/reimagine_logo/src/reimagine_logo/dom_helpers.cljs","^F",125,"^G",7,"^H",125,"^I",19,"^J",["^K",["^L",["^K",[["~$e","^M"]]]]],"^N","add class if not present and vice versa."],"^5","~$reimagine-logo.dom-helpers/toggle-class","^E","/Users/ben/Documents/research/benswift.me/_cljs/reimagine_logo/src/reimagine_logo/dom_helpers.cljs","^I",19,"^P",["^K",[["~$e","^M"]]],"^Q",null,"^R",["^K",[null,null]],"^G",1,"^S",false,"^F",125,"^T","^U","^H",125,"^V",2,"^W",true,"^J",["^K",["^L",["^K",[["~$e","^M"]]]]],"^N","add class if not present and vice versa."]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~:else","~:id","~:class"]],"~:order",["^24","^23","^22"]],"^N",null]